{"version":3,"sources":["assets/images/neutral.png","assets/images/good.png","assets/images/fair.png","assets/images/poor.png","data/AppContext.js","components/Utility/Navbar/Navbar.js","components/Grid/Grid.js","components/Utility/Card/Card.js","components/Filter/FilterTheme.js","components/Filter/Filter.js","components/Utility/Loader/Loader.js","components/Utility/Error/Error.js","constants/Colors.js","constants/defaultChartOptions/defaultOptionWeekBar.js","components/Charting/WeekBar/WeekBar.js","constants/defaultChartOptions/defaultOptionMonthBar.js","components/Charting/MonthBar/MonthBar.js","constants/defaultChartOptions/defaultOptionWeekDensity.js","components/Charting/WeekDensity/WeekDensity.js","constants/defaultChartOptions/defaultOptionStackedBar.js","components/Charting/StackedBar/StackedBar.js","hooks/returnPrevProps.js","components/EventByTriggerObject/EventByTriggerObject.js","components/Utility/Pagination/Pagination.js","components/EventList/EventList.js","components/Utility/DateRange/DateRange.js","components/Utility/Button/Button.js","components/Grouping/GroupingMutations.js","components/Utility/Menu/Menu.js","components/Utility/GroupingHeader/GroupingHeader.js","components/Utility/Modal/Modal.js","components/Editor/Editor.js","helperFuncs/formatGroupingDataForDup.js","components/Grouping/GroupingQueries.js","components/Grouping/Grouping.js","components/ListView/LVGroupingData.js","components/ListView/ListView.js","containers/ListPage/ListPage.js","components/Divider/Divider.js","components/GroupingSandBox/GroupingSandBox.js","components/Dashboard/DashboardQuery.js","components/Dashboard/Dashboard.js","containers/DashboardPage/DashboardPage.js","components/Login/Login.js","containers/LoginPage/LoginPage.js","index.js"],"names":["module","exports","__webpack_require__","p","AppContext","React","createContext","Consumer","Provider","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","authed","inherits","createClass","key","value","react_default","a","createElement","store","children","Component","Navbar","health","loading","className","react_router_dom","to","src","neutral","alt","good","fair","poor","Grid","editing","grouping","setGroupingLayoutToState","layout","layoutProps","toConsumableArray","layoutLGs","forEach","i","card","id","useEffect","console","log","react_grid_layout_default","cols","width","isDraggable","isResizable","Card","title","pos","size","list","listView","concat","theme","chipsContainer","zIndex","display","minHeight","backgroundColor","font","alignContent","flexWrap","padding","borderRadius",":focus","border","container","flex","containerOpen","input","outline","boxSizing","margin","color","fontSize","suggestionsContainer","position","maxHeight","overflowY","left","marginTop","borderBottomLeftRadius","borderBottomRightRadius","suggestionsList","listStyle","boxShadow","suggestion","suggestionHighlighted","background","sectionContainer","sectionTitle","chipTheme","chip","maxWidth","whiteSpace","overflow","textOverflow","cursor","fontWeight","chipSelected","chipRemove","right",":hover","chipThemeHidden","objectSpread","levelSuggestions","sourceSuggestions","typeSuggestions","Filter","empty","location","params","chips","updateChips","divElement","useRef","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","setInitialHeight","_useState7","_useState8","initialWidth","setInitialWidth","_useState9","_useState10","_useState11","suggestions","_useState12","suggestionsState","setSuggestionsState","clientWidth","initialHeight","clientHeight","window","addEventListener","updateDimensions","removeEventListener","titleMargin","setTitleMargin","renderSectionTitle","section","length","style","height","alignItems","marginLeft","ref","lib_default","onChange","suggestionsFilter","autocomplete","nodeSuggestions","data","filter","entities","toLowerCase","nodeFiltered","indexOf","nodeIndex","map","x","levelFiltered","levelIndex","sourceFiltered","sourceIndex","typeFiltered","typeIndex","placeholder","multiSection","getSectionSuggestions","override","css","_templateObject","Loader","ClipLoader_default","sizeUnit","Error","error","Colors","alerts","traps","syslogs","winEvents","vmwEvents","critical","informational","notice","serious","warning","alert","emergency","unknown","getTypeFromHex","hex","getLevelFromHex","defaultOption","grid","bottom","top","xAxis","type","axisTick","show","axisLine","axisLabel","lineHeight","formatter","index","yAxisDefaults","showMaxLabel","splitLine","splitArea","areaStyle","seriesDefaults","barWidth","animationDurationUpdate","animationEasing","weekBar","onWeekBarClick","setState","preLoaded","_len","arguments","rest","Array","_key","target","fill","_this$props","startDate","monthYear","dataIndex","year","moment","month","day","getDate","startDateMoment","Date","endDateMoment","formattedDateString","format","onChartClick","selectedChip","getOption","yAxis","max","roundedMax","min","interval","splitNumber","series","name","charAt","toUpperCase","slice","label","items","prevProps","echartsInstance","echartsReactRef","getEchartsInstance","zr","getZr","on","_this2","_this$props2","echarts_for_react_lib_default","option","e","Math","apply","ceil","defaultMax","withRouter","legendOption","orient","itemWidth","itemGap","textStyle","mobileLegendOption","mobileLegendOption2","desktopLegendOption","defaultTooltipOption","tooltip","trigger","axisPointer","shadowStyle","shadowColor","shadowBlur","desktopGridOption","mobileGridOption","mobileGridOption2","axisOption","round","axisOption2","splitAreaOption","desktopDataZoom","start","end","borderColor","dataBackground","lineStyle","handleStyle","fillerColor","mobileDataZoom","xAxisIndex","filterMode","yAxisIndex","calculable","MonthBar","updateCount","count","updateEvents","onMonthBarClick","isGreaterThanZero","orientation","colorOption","seriesOption","legendDataOption","legend","dataZoom","echartsInstance1","echartsReactRef1","echartsInstance2","echartsReactRef2","echartsInstance3","echartsReactRef3","zr1","zr2","zr3","Utility_Loader_Loader","Utility_Error_Error","maxs","alertsMax","trapsMax","syslogsMax","vmwEventsMax","winEventsMax","push","hours","days","desktopOption","animation","mobileOption","visualMapDefault","inRange","align","precision","seriesDefault","mobileSeriesLabelOption","normal","desktopSeriesLabelOption","WeekDensity","onWeekDensityClick","yIndex","floor","xIndex","dayMonthDateString","hourStart","hour","hourEnd","pageCount","weekByTriggerObject","events","handlePageClick","page","selected","visualMap","week","itemDensity","item","defaultOptionDesktop","defaultOptionMobile","StackedBar","onStackedBarClick","preloaded","chipType","weekSeverity","stack","echartsInstance4","echartsReactRef4","zr4","message","useReturnPrevProps","val","current","EventList","setPreLoaded","prevEmpty","entity","onClick","onTriggerClick","Pagination","dist_default","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","pageLinkClassName","activeLinkClassName","containerClassName","subContainerClassName","activeClassName","setOrderByCalled","stateSelected","setStateSelected","direction","setDirection","callOrderBy","orderBy","setOrderBy","setToggleOrderBy","displayOrderByIcon","IosArrowUp_default","IosArrowDown_default","SuperResponsiveTable","array","level","react_moment_dist_default","date","triggerTime","getWeekDays","weekStart","add","toDate","getWeekRange","from","startOf","endOf","Input","forwardRef","MdArrowDropdown_default","DateRange","endDate","duration","startDateMonth","setStartDateMonth","showWeekPicker","setShowWeekPicker","showDropDown","setShowDropDown","undefined","hoverRange","setHoverRange","selectedDays","setSelectedDays","selectedDay","setSelectedDay","_useState13","_useState14","dropDownDuration","setDropDownDuration","_useState15","_useState16","initDashboard","setInitDashboard","_useState17","_useState18","initListPage","setInitListPage","y","m","endDateMonth","setStartEndDates","startDateWeek","endDateInt","Number","endDateWeek","openDropDown","handleChange","selectedMonth","setDurationVal","openWeekPicker","handleDayChange","weekYear","handleDayEnter","handleDayLeave","handleWeekClick","weekNumber","notListPage","daysAreSelected","modifiers","selectedRange","hoverRangeStart","hoverRangeEnd","selectedRangeStart","selectedRangeEnd","text","formatDropDownInput","DayPicker_default","onDayClick","startDayMoment","endDayMoment","showOutsideDays","disabledDays","after","onDayMouseEnter","onDayMouseLeave","onWeekClick","es","openToDate","customInput","inline","dateFormat","showMonthYearPicker","maxDate","Button","buttonType","DUPLICATE_GROUPING_MUTATION","gql","GroupingMutations_templateObject","DELETE_GROUPING_MUTATION","_templateObject2","UPDATE_GROUPING_MUTATION","_templateObject3","Menu","toggleEditMode","showDelModal","showMenu","formattedGroupingData","groupingID","updatedHeaderTitle","showDupModal","groupingUpdated","setGroupingUpdated","groupingDuplicated","setGroupingDuplicated","showDupModalFunc","closeMenu","Utility_Button_Button","editClick","react_apollo_esm","mutation","variables","onCompleted","updateGroupingMutation","_ref2","IosMore_default","toggleShowMenu","createGrouping","success","duplicateGroupingMutation","_ref","GroupingHeader","setTitle","weekDaysInit","dateRangeText","dropdown","durationVal","toggleModal","saveEdit","duplicateGrouping","dateChanged","event","Utility_DateRange_DateRange","subtitle","Utility_Menu_Menu","saveEditRecievesTitle","Modal","closeModal","showDeldModal","confirm","onConfirm","confirmText","cancel","trashIcon","wideButtons","modalHeaderText","modalBodyText","cancelText","groupingDeleted","setGroupingDeleted","showCannotDelModal","setShowCannotDelModal","IosTrashOutline_default","reload","deleteGroupingMutation","loadingText","Editor","addCard","Utility_Card_Card","formatGroupingDataForDup","cards","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","layoutLG","w","h","layoutMD","layoutSM","layoutXS","cardType","err","return","GET_FILTER_DATA","GroupingQueries_templateObject","GET_ITEMS","GroupingQueries_templateObject2","GroupingQueries_templateObject3","GET_ITEM_COUNT","_templateObject4","GET_WEEKBAR_DATA","_templateObject5","GET_ENTITY_LIST","_templateObject6","GET_ENTITY_COUNT","_templateObject7","GET_WEEK_DENSITY_DATA","_templateObject8","GET_MONTHBAR_DATA","_templateObject9","GET_WEEKSEVERITY_DATA","_templateObject10","Grouping","history","setEditing","setShowDupModal","setShowDelModal","setShowDeldModal","setShowMenu","groupingData","setFormattedGroupingData","_useState19","_useState20","_useState21","_useState22","setPage","_useState23","_useState24","types","setTypes","_useState25","_useState26","levels","setLevels","_useState27","_useState28","triggers","setTriggers","_useState29","_useState30","_useState31","_useState32","sources","setSources","_useState33","_useState34","entitySuggestions","setEntitiySuggestions","_useState35","_useState36","setChips","_useState37","_useState38","_useState39","_useState40","_useState41","_useState42","_useState43","_useState44","setDuration","_useState45","_useState46","setMonthYear","_useState47","_useState48","setWeekYear","_useState49","_useState50","setWeekDaysInit","_useState51","_useState52","setStartDate","_useState53","_useState54","setEndDate","_useState55","_useState56","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","_useState65","_useState66","setFilterWidth","_useState67","_useState68","groupingMax","setGroupingMax","_useState69","_useState70","groupingMaxs","setGroupingMaxs","_useState71","_useState72","_useState73","_useState74","groupingLayout","setGroupingLayout","_useState75","_useState76","newGridElements","setNewGridElements","calcGroupingMaxFunc","some","setStartEndDatesFunc","closeMenuFunc","dates","_d","getTypeFromChip","today","monthYearInit","weekYearInit","onChartClickFunc","allChips","allLevels","allTypes","includes","onTriggerClickFunc","setTitleMarginFunc","setEntitiySuggestionsFunc","handlePageClickFunc","showCannotDelModalFunc","showDelModalFunc","showDeldModalFunc","closeDupModalFunc","setOrderByFunc","setChipsFunc","updateChipsFunc","unformattedTypes","isLevel","isSource","replace","Utility_Modal_Modal","showModal","Utility_GroupingHeader_GroupingHeader","classname","fromGroupingHeader","components_Editor_Editor","randID","random","toString","groupingWidths","elementWidth","xVal","reduce","b","components_Grid_Grid","query","components_Filter_Filter","skip","first","EventByTriggerObject","_ref3","Utility_Pagination_Pagination","getEntityCount","_ref4","WeekBar","calcGroupingMax","_ref5","Charting_MonthBar_MonthBar","monthBar","yellow","blue","purple","cream","grey","_ref6","Charting_WeekDensity_WeekDensity","weekDensity","_ref7","Charting_StackedBar_StackedBar","_ref8","components_EventList_EventList","getItems","_ref9","getItemCount","LVGroupingData","layoutMDs","layoutSMs","layoutXSs","ListView","scrollTo","Utility_Navbar_Navbar","components_Grouping_Grouping","assign","ListPage","context","components_ListView_ListView","actions","pathname","Divider","GroupingSandBox","el","GET_GROUPINGS","DashboardQuery_templateObject","Dashboard","alertData","syslogsData","trapsData","setEvents","dashboard","groupings","monthByTriggerObject","components_Divider_Divider","components_GroupingSandBox_GroupingSandBox","DashboardPage","components_Dashboard_Dashboard","Login","username","setUsername","password","setPassword","onSubmit","preventDefault","LoginPage","components_Login_Login","client","ApolloClient","uri","ReactDOM","render","AppContext_Provider","react_router","path","component","exact","document","getElementById"],"mappings":"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","file":"static/js/main.70c9941f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/neutral.2333ead5.png\";","module.exports = __webpack_public_path__ + \"static/media/good.825105d4.png\";","module.exports = __webpack_public_path__ + \"static/media/fair.831f3706.png\";","module.exports = __webpack_public_path__ + \"static/media/poor.717e5b6c.png\";","import React from 'react'\n// import {api} from './api'\n\n// Context\nconst AppContext = React.createContext();\nexport const Consumer = AppContext.Consumer;\n\n\nexport class Provider extends React.Component {\n\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            authed: false\n        }\n    }\n\n    render() {\n        return (\n            <AppContext.Provider value={{store: this.state}}>\n                {this.props.children}\n            </AppContext.Provider>\n        );\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './navbar.scss'\nimport '../../../scss/imports/_animate.css'\n\n// Icon Imports\nimport good from '../../../assets/images/good.png'\nimport fair from '../../../assets/images/fair.png'\nimport poor from '../../../assets/images/poor.png'\nimport neutral from '../../../assets/images/neutral.png'\n\nconst Navbar = props => {\n    const { health, loading } = props\n    return (\n      <div className={loading ? 'loading navbar animated infinite bounce' : 'navbar'}>\n      {/* <a href=\"\">Support</a> */}\n      {/* <a href=\"\">Integrations</a> */}\n      <Link to=\"/\">\n      {!health && <img src={neutral} alt=\"neutral\" className=\"logo\"/>}\n      {health === 'good' && <img src={good} alt=\"good\" className=\"logo\"/>}\n      {health === 'fair' && <img src={fair} alt=\"fair\" className=\"logo\"/>}\n      {health === 'poor' && <img src={poor} alt=\"poor\" className=\"logo\"/>}\n\n      </Link>\n        {/* <a href=\"\">Settings</a> */}\n      {/* <a href=\"\">Account</a> */}\n      </div>\n    )\n}\n\nexport default Navbar","import React, { useState, useEffect } from 'react'\n\n// Styles\nimport './grid.scss'\nimport '../../../node_modules/react-grid-layout/css/styles.css'\nimport '../../../node_modules/react-resizable/css/styles.css'\n\n// React Grid\nimport GridLayout from 'react-grid-layout'\n// import { Responsive, WidthProvider } from 'react-grid-layout'\n\n// Init WidthProvider\n// const ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst Grid = props => {\n    const { editing, grouping, children, setGroupingLayoutToState, layout } = props\n    let layoutProps = [...grouping.layoutLGs]\n\n    if (grouping) {\n        layoutProps.forEach((layout) => {\n            layout.i = layout.card.id\n        })\n    }\n\n    // Component Did Mount\n    useEffect(() => {\n        if (layoutProps !== layout) {\n            setGroupingLayoutToState(layoutProps)\n        }\n    }, [])\n\n    useEffect(() => {\n        console.log(layout)\n    }, [layout])\n\n    if (grouping) {\n        return (\n            <GridLayout\n                className=\"layout\"\n                layout={layout}\n                // breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n                cols={24}\n                // cols={{ lg: 24, md: 18, sm: 12, xs: 9, xxs: 4 }}\n                width={1800}\n                // rowHeight={65}\n                // margin={[10,10]}\n                isDraggable={false}\n                isResizable={false}\n            // onLayoutChange={this.}\n            >\n                {children}\n            </GridLayout>\n        )\n    }\n}\n\nexport default Grid\n","import React from 'react'\nimport './card.scss'\n\nconst Card = props => {\n    const { title, pos, size, list, listView, loading, children } = props\n    return (\n      <div className={`card ${size} ${pos} ${list ? 'list' : ''} ${loading ? 'loading' : ''} ${listView ? 'listViewCard' : ''}`}>\n        <span className=\"card-title\">{title}</span>\n        <div className={`card-body`}>\n          {children}\n        </div>\n      </div>\n    )\n}\n\nexport default Card\n","const theme = {\n  chipsContainer: {\n    zIndex: 9999,\n    display: \"flex\",\n    minHeight: 'calc(100% - 10px)',\n    backgroundColor: 'transparent',\n    font: \"13.33333px Arial\",\n    alignContent: \"flex-start\",\n    flexWrap: \"wrap\",\n    padding: \"5px 5px\",\n    borderRadius: 5,\n    ':focus': {\n      border: \"1px solid #aaa\",\n    }\n  },\n  container: {\n    flex: 1,\n  },\n  containerOpen: {\n\n  },\n  input: {\n    border: 'none',\n    outline: 'none',\n    boxSizing: 'border-box',\n    width: '100%',\n    padding: 5,\n    margin: 2.5,\n    backgroundColor: 'transparent',\n    color: '#808080',\n    fontSize: 16,\n  },\n  suggestionsContainer: {\n    position: 'absolute',\n    width: '100%',\n    maxHeight: 475,\n    overflowY: 'auto',\n    left: 0,\n    marginTop: 5,\n    borderBottomLeftRadius: 5,\n    borderBottomRightRadius: 5,\n  },\n  suggestionsList: {\n    width: '100%',\n    backgroundColor: '#151516',\n    listStyle: 'none',\n    padding: 0,\n    margin: 0,\n    boxShadow: '0 2 5px rgba(0,0,0,0.25)',\n\n  },\n  suggestion: {\n    padding: '10px 15px',\n    color: '#A6A6A6'\n  },\n  suggestionHighlighted: {\n    background: '#2C2C2F'\n  },\n  sectionContainer: {\n\n  },\n  sectionTitle: {\n\n  },\n}\n\nconst chipTheme = {\n  chip: {\n    maxWidth: '80%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    position: 'relative',\n    padding: \"5px 25px 5px 10px\",\n    background: \"#1A1B1D\",\n    color: '#ffffff',\n    margin: \"5px\",\n    borderRadius: 3,\n    cursor: 'default',\n    fontWeight: 500,\n    fontSize: 16,\n    boxShadow: '-1px 1px 3px rgba(0,0,0,0.25)'\n  },\n  chipSelected: {\n    background: '#888',\n  },\n  chipRemove: {\n    position: 'absolute',\n    right: '10px',\n    cursor: \"pointer\",\n    ':hover': {\n      color: '#A6A6A6',\n    }\n  }\n}\n\nconst chipThemeHidden = {\n  ...chipTheme,\n  chip: {\n    display: 'none'\n  }\n}\n\nexport {\n    theme,\n    chipTheme,\n    chipThemeHidden\n}","import React, { useState, useEffect, useRef } from 'react'\n\n// Styles Imports\nimport './filter.scss'\nimport { theme, chipThemeHidden, chipTheme } from './FilterTheme'\n\n// React Chips\nimport Chips from 'react-chips'\n\n// Suggestions Declaration\nconst levelSuggestions = ['Critical',\n  'Informational',\n  'Notice',\n  'Warning',\n  'Alert',\n  'Error',\n  'Emergency']\nconst sourceSuggestions = ['Orion', 'Splunk']\nconst typeSuggestions = ['Alerts', 'Traps', 'Syslogs', 'Windows Events', 'VMware Events']\n\nconst Filter = props => {\n  const { empty, location, params, chips, updateChips } = props\n  const divElement = useRef(null)\n  const [height, setHeight] = useState(null)\n  const [width, setWidth] = useState(null)\n  const [initialHeight, setInitialHeight] = useState(null)\n  const [initialWidth, setInitialWidth] = useState(null)\n  const [locationState, setLocationState] = useState(props.location)\n  const [suggestionsState, setSuggestionsState] = useState([\n    {\n      title: 'Levels',\n      suggestions: [...levelSuggestions]\n    },\n    {\n      title: 'Sources',\n      suggestions: [...sourceSuggestions]\n    },\n    {\n      title: 'Types',\n      suggestions: [...typeSuggestions]\n    }, {\n      title: 'Nodes',\n      suggestions: []\n    }\n  ])\n\n  useEffect(() => {\n    // Set Element Height/Width\n    let initialWidth = divElement.clientWidth\n    const initialHeight = divElement.clientHeight\n    setInitialWidth(initialWidth)\n    setInitialHeight(initialHeight)\n    // Add Resize Listener\n    window.addEventListener(\"resize\", updateDimensions)\n    // Update Chips\n    if (location === '/list') {\n      props.updateChips(params.chips)\n    } else {\n      props.updateChips(chips)\n    }\n  }, [])\n\n\n  // Component Will Unmount\n  useEffect(() => {\n    return () => {\n      window.removeEventListener(\"resize\", updateDimensions)\n    }\n  })\n\n  // Update Width On Window Resize\n  const updateDimensions = () => {\n    let width = divElement.clientWidth\n    if (width !== initialWidth && props.titleMargin) {\n      props.setTitleMargin(width)\n    }\n  }\n\n  const filterSuggestions = (autocomplete, input) => {\n    const nodeSuggestions = props.data.filter.entities\n\n    let suggestions = suggestionsState\n    input = input.toLowerCase()\n    switch (autocomplete.title) {\n      case 'Nodes':\n        let nodeFiltered = nodeSuggestions.filter((suggestion) => suggestion.toLowerCase().indexOf(input) !== -1)\n        let nodeIndex = suggestions.map(x => x.title).indexOf('Nodes')\n        suggestions[nodeIndex].suggestions = nodeFiltered\n        break\n      case 'Levels':\n        let levelFiltered = levelSuggestions.filter((suggestion) => suggestion.toLowerCase().indexOf(input) !== -1)\n        let levelIndex = suggestions.map(x => x.title).indexOf('Levels')\n        suggestions[levelIndex].suggestions = levelFiltered\n        break\n      case 'Sources':\n        let sourceFiltered = sourceSuggestions.filter((suggestion) => suggestion.toLowerCase().indexOf(input) !== -1)\n        let sourceIndex = suggestions.map(x => x.title).indexOf('Sources')\n        suggestions[sourceIndex].suggestions = sourceFiltered\n        break\n      case 'Types':\n        let typeFiltered = typeSuggestions.filter((suggestion) => suggestion.toLowerCase().indexOf(input) !== -1)\n        let typeIndex = suggestions.map(x => x.title).indexOf('Types')\n        suggestions[typeIndex].suggestions = typeFiltered\n        break\n      default:\n        break;\n    }\n    setSuggestionsState(suggestions)\n    return true\n  }\n\n  const getSectionSuggestions = (section) => {\n    return section.suggestions\n  }\n\n  const renderSectionTitle = (section) => {\n    return (\n      section.suggestions.length ? <div style={{ backgroundColor: '#111111', height: 35, alignItems: 'center', display: 'flex' }}>\n        <span style={{ color: 'white', marginLeft: 15 }}>{section.title}</span>\n      </div> : <div></div>\n    )\n  }\n\n  return (\n    <div className={`filter ${empty ? 'disabled' : ''}`} ref={divElement}>\n      <div className=\"chips-input\">\n        <Chips\n          value={chips}\n          onChange={updateChips}\n          suggestions={suggestionsState}\n          suggestionsFilter={filterSuggestions}\n          theme={theme}\n          chipTheme={chipThemeHidden}\n          placeholder=\"Add filters...\"\n          multiSection\n          getSectionSuggestions={getSectionSuggestions}\n          renderSectionTitle={renderSectionTitle}\n        />\n      </div>\n      <div className=\"chips-chips\">\n        <Chips\n          value={chips}\n          onChange={updateChips}\n          theme={theme}\n          chipTheme={chipTheme}\n          renderSectionTitle={renderSectionTitle}\n        />\n      </div>\n      <div className=\"gradient-bar\" />\n    </div>\n  )\n}\n\nexport default Filter","import React, { useState } from 'react'\nimport { css } from '@emotion/core'\nimport './loader.scss'\n\n// Loader\nimport ClipLoader from 'react-spinners/ClipLoader'\n\nconst override = css`\n    display: block;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin: -25px 0 0 -25px;\n`;\n\nconst Loader = () => {\n  const [loading, setLoading] = useState(true)\n  return (\n    <div className='loader'>\n      <ClipLoader\n        css={override}\n        sizeUnit={\"px\"}\n        size={20}\n        color={'#68686E'}\n        loading={loading}\n      />\n    </div>\n  )\n}\n\nexport default Loader","\nimport React from 'react'\nimport './error.scss'\n\nconst Error = props => {\n    const { error } = props\n    return (\n      <h1>Error: {error} </h1>\n    )\n}\n\nexport default Error","const Colors = {\n\n    alerts: '#F3B817',\n    traps: '#00B1EA',\n    syslogs: '#6F2AD2',\n    winEvents: '#ECEBF3',\n    vmwEvents: '#8293A0',\n\n    critical: '#F9C00C', \n    informational: 'white', \n    notice: '#00B1EA', \n    serious: 'blue', \n    warning: '#6F2AD2', \n    alert: '#ECEBF3', \n    emergency: '#BB4B42', \n    error: '#79D563', \n    unknown: '#8293A0'\n}\n\nconst getTypeFromHex = (hex) => {\n\n  switch(hex) {\n    case (Colors.alerts):\n      return 'Alerts'\n    case (Colors.traps):\n      return 'Traps'\n    case (Colors.syslogs):\n      return 'Syslogs'\n    case (Colors.winEvents):\n      return 'Windows Events'\n    case (Colors.vmwEvents):\n      return 'VMware Events'\n  }\n}\n\nconst getLevelFromHex = (hex) => {\n  \n  switch(hex) {\n    case (Colors.critical):\n      return 'Critical'\n    case (Colors.informational):\n      return 'Informational'\n    case (Colors.notice):\n      return 'Notice'\n    case (Colors.serious):\n      return 'Serious'\n    case (Colors.warning):\n      return 'Warning'\n    case (Colors.alert):\n      return 'Alert'\n    case (Colors.emergency):\n      return 'Emergency'\n    case (Colors.error):\n      return 'Error'\n    case (Colors.unknown):\n      return 'Unknown'\n  }\n}\n\nexport {Colors, getTypeFromHex, getLevelFromHex}","const defaultOption = {\n    // tooltip: {\n    //   trigger: 'axis',\n    //   axisPointer: {\n    //     type: 'shadow',\n    //     shadowStyle: {\n    //       color: 'rgba(256,256,256,0.02)',\n    //       shadowColor: 'rgba(0, 0, 0, 1)',\n    //       shadowBlur: 10\n    //     }\n    //   }\n    // },\n    grid: {\n        left: 0,\n        right: 0,\n        bottom: 40,\n        top: 0\n        // containLabel: true\n    },\n    xAxis: [\n        {\n            type: 'category',\n            data: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            axisTick: {\n                show: false,\n            },\n            axisLine: {\n                show: false\n            },\n            axisLabel: {\n                color: '#818181',\n                size: 14,\n                fontWeight: 500,\n                lineHeight: 25,\n                formatter: function (value, index) {\n                    switch (index) {\n                        case 0:\n                            return 'S'\n                        case 1:\n                            return 'M'\n                        case 2:\n                            return 'T'\n                        case 3:\n                            return 'W'\n                        case 4:\n                            return 'T'\n                        case 5:\n                            return 'F'\n                        case 6:\n                            return 'S'\n                        default:\n                            return 'S'\n                    }\n                }\n            }\n        }\n    ],\n    // series: [\n        // {\n            // itemStyle: {\n            //   barBorderRadius: [3, 3, 0, 0],\n            //   shadowColor: 'rgba(0, 0, 0, 0.4)',\n            //   shadowBlur: 10,\n            //   shadowOffsetX: -4,\n            //   shadowOffsetY: 5\n            // },\n            // tooltip: {\n                // formatter: '{b0}: {c0}<br />{b1}: {c1}'\n            // }\n        // }\n    // ]\n}\n\nconst yAxisDefaults = {\n    type: 'value',\n    axisLine: {\n        show: false\n    },\n    axisLabel: {\n        showMaxLabel: true\n    },\n    splitLine: {\n        show: false\n    },\n    splitArea: {\n        show: true,\n        areaStyle: {\n            color: ['#1A1B1D', 'rgba(200,200,200,0)']\n        }\n    }\n}\n\nconst seriesDefaults = {\n    type: 'bar',\n    barWidth: '50%',\n    animationDurationUpdate: 750,\n    animationEasing: 'easeInOutQuart'\n}\n\nexport {\n    defaultOption,\n    yAxisDefaults,\n    seriesDefaults\n}","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport ReactEcharts from 'echarts-for-react'\n\n// Components\nimport Loader from '../../Utility/Loader/Loader'\nimport Error from '../../Utility/Error/Error'\n\n// Constants\nimport { Colors, getTypeFromHex } from '../../../constants/Colors'\nimport { defaultOption, yAxisDefaults, seriesDefaults } from '../../../constants/defaultChartOptions/defaultOptionWeekBar'\n\n\n// Styles\nimport './week-bar.scss'\n\n// Moment\nimport moment from 'moment'\n\nclass weekBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      preLoaded: false,\n      max: null,\n      roundedMax: null\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.state.preLoaded && !this.props.empty) {\n      this.echartsInstance = this.echartsReactRef.getEchartsInstance()\n      this.zr = this.echartsInstance.getZr()\n      this.zr.on('click', this.onWeekBarClick)\n      this.setState({ preLoaded: true })\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // if (!props.empty) {\n    //   console.log(props)\n    // }\n    // console.log(props.weekBarMax)\n    if (props.data && props.data.weekBar) {\n      let items = props.data.weekBar.items\n      let max = Math.max(...items)\n      let roundedMax = Math.ceil(max / 7.0) * 7\n      if (max > 0 && state.max !== max) {\n        return { max, roundedMax }\n      }\n      // console.log('weekBarProps', props)\n      // props.calcGroupingMax(max, 'weekBar')\n    }\n    let defaultMax = 60\n    return { max: defaultMax, roundedMax: (defaultMax / 7.0) * 7 }\n    // return null\n  }\n\n  onWeekBarClick = (...rest) => {\n    this.setState({ preLoaded: false })\n    let chip = getTypeFromHex(rest[0].target['__cachedNormalStl'].fill)\n    // console.log(chip)\n    const { startDate, monthYear } = this.props\n    if (!rest[0].target || typeof rest[0].target.dataIndex !== \"number\") {\n      return\n    }\n    let index = rest[0].target.dataIndex\n\n    // For Query\n    // const getSelectedDayInt = () => {\n    //   let startDateDayInt = Number(moment(startDate).date())\n    //   return startDateDayInt + index\n    // }\n    // let selectedDayInt = getSelectedDayInt()\n    // let dayMonthYear = `d${selectedDayInt}${monthYear}`\n\n    // Get Start/End Moments\n    let year = moment(startDate).year()\n    let month = moment(startDate).month()\n    let day = startDate.getDate() + index\n    let startDateMoment = new Date(year, month, day, 0, 0, 0)\n    let endDateMoment = new Date(year, month, day, 23, 59, 59)\n\n    // Create Subtitle\n    let formattedDateString = moment(startDateMoment).format('dddd, MMMM Do, YYYY')\n\n\n    // Send Data To Grouping\n    this.props.onChartClick({\n      formattedDateString: formattedDateString, // For View\n      startDateMoment: startDateMoment, // For Filter Query\n      endDateMoment: endDateMoment, // For Filter Query\n      selectedChip: chip // For Filter Query\n      // dateRange: dayMonthYear, // For Query\n      // rangeType: 'dmy' // For Query\n    })\n  }\n\n  getOption = () => {\n    return {\n      ...defaultOption,\n      color: [this.props.color],\n      yAxis: [\n        {\n          ...yAxisDefaults,\n          // max: this.props.groupingMax,\n          max: this.state.roundedMax,\n          min: 0,\n          // interval: this.props.groupingMax / 7,\n          interval: this.state.roundedMax / 6,\n          splitNumber: 5\n        },\n      ],\n      series: [\n        {\n          name: this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1),\n          ...seriesDefaults,\n          label: {\n            show: true,\n            color: 'black',\n            formatter: params => {\n              if (params.data > 0) {\n                return params.data\n              } else {\n                return ''\n              }\n            }\n          },\n          data: this.props.data.weekBar.items,\n        }\n      ]\n    }\n  }\n\n  render() {\n    const { empty, error } = this.props\n\n    return (\n      <div className='week-bar'>\n        {/* Loader */}\n        {!error && (empty && !this.state.preLoaded) && <div></div>}\n\n        {/* Error */}\n        {error && `error: ${error}`}\n\n        {(this.state.preLoaded || !empty) && <ReactEcharts option={this.getOption()} ref={e => {\n          this.echartsReactRef = e\n        }} />}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(weekBar)\n\n\n","const legendOption = {\n    top: 10,\n    right: 'center',\n    orient: 'horizontal',\n    itemWidth: 15,\n    itemGap: 15,\n    textStyle: {\n      color: '#818181'\n    }\n}\n\nconst mobileLegendOption = {\n    ...legendOption,\n    width: '100%'\n}\n\nconst mobileLegendOption2 = {\n    ...legendOption,\n    width: 300\n}\n\nconst desktopLegendOption = {\n    ...legendOption,\n    width: 500\n}\n\nconst defaultTooltipOption = {\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'shadow',\n            shadowStyle: {\n                color: 'rgba(256,256,256,0.02)',\n                shadowColor: 'rgba(0, 0, 0, 1)',\n                shadowBlur: 10\n            }\n        },\n    }\n}\n\nconst desktopGridOption = {\n    grid: {\n        left: 40,\n        right: 40,\n        bottom: 40,\n        top: 50\n    }\n}\n\nconst mobileGridOption = {\n    grid: {\n        left: 40,\n        right: 20,\n        bottom: 40,\n        top: 40\n    }\n}\n\nconst mobileGridOption2 = {\n    grid: {\n        left: 40,\n        right: 20,\n        bottom: 40,\n        top: 80\n    }\n}\n\nconst axisOption = {\n    type: 'value',\n    axisLine: {\n        show: false\n    },\n    axisLabel: {\n        color: '#818181',\n        size: 14,\n        fontWeight: 500,\n        lineHeight: 25,\n        formatter: (value, index) => {\n            if (value > 999) {\n                let thousands = value / 1000\n                let label = thousands + 'k'\n                return label\n            }\n            return Math.round(value)\n        }\n    },\n    axisTick: { show: false },\n    splitLine: {\n        show: false\n    }\n}\n\nconst axisOption2 = {\n    type: 'category',\n    axisTick: { show: false },\n    axisLine: {\n        show: false\n    },\n    axisLabel: {\n        show: true,\n        color: '#818181',\n        size: 14,\n        fontWeight: 500,\n        lineHeight: 25\n    }\n}\n\nconst splitAreaOption = {\n    splitArea: {\n        show: true,\n        areaStyle: {\n            color: ['rgb(26, 27, 29)', 'rgba(200,200,200,0)']\n        }\n    }\n}\n\nconst desktopDataZoom = [\n    {\n        type: 'slider',\n        show: true,\n        start: 0,\n        end: 100,\n        // backgroundColor: 'rgba(0, 0, 0, 0.17)',\n        borderColor: 'transparent',\n        dataBackground: {\n            lineStyle: {\n                // color: 'red'\n            },\n            areaStyle: {\n                // color: 'rgba(255, 255, 255, .2)'\n            },\n        },\n        textStyle: {\n            color: 'transparent'\n        },\n        handleStyle: {\n            color: 'rgba(125, 125, 125, 1)'\n        },\n        fillerColor: 'rgba(255, 255, 255, .04)',\n        // borderColor: 'red',\n        left: 42,\n        right: 47,\n        bottom: 4\n    },\n    {\n        show: false,\n    }\n]\n\nconst mobileDataZoom = [\n    {\n        show: false,\n        xAxisIndex: [0],\n        filterMode: 'empty'\n    },\n    {\n        type: 'slider',\n        show: true,\n        yAxisIndex: [0],\n        filterMode: 'filter',\n        start: 0,\n        end: 100,\n        // backgroundColor: 'rgba(0, 0, 0, 0.17)',\n        borderColor: 'transparent',\n        dataBackground: {\n            lineStyle: {\n                // color: 'red'\n            },\n            areaStyle: {\n                // color: 'rgba(255, 255, 255, .2)'\n            },\n        },\n        textStyle: {\n            // color: '#EAEAEB'\n            color: 'transparent'\n        },\n        handleStyle: {\n            color: 'rgba(125, 125, 125, 1)'\n        },\n        fillerColor: 'rgba(255, 255, 255, .04)',\n        // borderColor: 'red',\n        left: 5,\n        // right: 82,\n        bottom: 43\n    }\n]\n\nconst defaultOption = {\n    calculable: true,\n}\n\nexport {\n    mobileLegendOption,\n    mobileLegendOption2,\n    desktopLegendOption,\n    defaultTooltipOption,\n    desktopGridOption,\n    mobileGridOption,\n    mobileGridOption2,\n    axisOption,\n    axisOption2,\n    splitAreaOption,\n    desktopDataZoom,\n    mobileDataZoom,\n    defaultOption\n}","// Third Party\nimport React, { Component } from 'react'\nimport WindowSizeListener from 'react-window-size-listener'\nimport { withRouter } from 'react-router-dom'\nimport ReactEcharts from 'echarts-for-react'\n\n// Components\nimport Loader from '../../Utility/Loader/Loader'\nimport Error from '../../Utility/Error/Error'\n\n// Constants\nimport { Colors, getTypeFromHex } from '../../../constants/Colors'\nimport {\n  mobileLegendOption,\n  mobileLegendOption2,\n  desktopLegendOption,\n  defaultTooltipOption,\n  desktopGridOption,\n  mobileGridOption,\n  mobileGridOption2,\n  axisOption,\n  axisOption2,\n  splitAreaOption,\n  desktopDataZoom,\n  mobileDataZoom,\n  defaultOption\n} from '../../../constants/defaultChartOptions/defaultOptionMonthBar'\n\n\n// Styles\nimport './month-bar.scss'\n\n// Moment\nimport moment from 'moment'\n\nclass MonthBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      preLoaded: false,\n      max: null,\n      roundedMax: null\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.state.preLoaded && !this.props.empty) {\n      this.echartsInstance1 = this.echartsReactRef1.getEchartsInstance()\n      this.echartsInstance2 = this.echartsReactRef2.getEchartsInstance()\n      this.echartsInstance3 = this.echartsReactRef3.getEchartsInstance()\n\n      this.zr1 = this.echartsInstance1.getZr()\n      this.zr2 = this.echartsInstance2.getZr()\n      this.zr3 = this.echartsInstance3.getZr()\n\n      this.zr1.on('click', this.onMonthBarClick)\n      this.zr2.on('click', this.onMonthBarClick)\n      this.zr3.on('click', this.onMonthBarClick)\n      this.setState({ preLoaded: true })\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.month) {\n      let data = props.month.series\n      let maxs = []\n      let alertsMax = Math.max(...data.alerts) || 0\n      let trapsMax = Math.max(...data.traps) || 0\n      let syslogsMax = Math.max(...data.syslogs) || 0\n      let vmwEventsMax = Math.max(...data.vmwEvents) || 0\n      let winEventsMax = Math.max(...data.winEvents) || 0\n      maxs.push(alertsMax, trapsMax, syslogsMax, vmwEventsMax, winEventsMax)\n      let max = Math.max(...maxs)\n      let roundedMax = Math.ceil(max / 7.0) * 7\n      if (max > 0) {\n        return { max, roundedMax }\n      }\n    }\n    return { roundedMax: 60 }\n  }\n\n  updateCount = width => {\n    if (width > 1050 && width < 1500) {\n      this.setState({ count: 21 })\n      this.updateEvents()\n    } else {\n      this.setState({ count: 9 })\n      this.updateEvents()\n    }\n  }\n\n  onMonthBarClick = (...rest) => {\n    this.setState({ preLoaded: false })\n    const { startDate, monthYear } = this.props\n    if (!rest[0].target || typeof rest[0].target.dataIndex !== \"number\") {\n      return\n    }\n    let index = rest[0].target.dataIndex\n    let chip = getTypeFromHex(rest[0].target['__cachedNormalStl'].fill)\n    // For Query\n    // const getSelectedDayInt = () => {\n    //   let startDateDayInt = Number(moment(startDate).date())\n    //   return startDateDayInt + index\n    // }\n    // let selectedDayInt = getSelectedDayInt()\n    // let dayMonthYear = `d${selectedDayInt}${monthYear}`\n\n    // Get Start/End Moments\n    let year = moment(startDate).year()\n    let month = moment(startDate).month()\n    let day = startDate.getDate() + index\n    let startDateMoment = new Date(year, month, day, 0, 0, 0)\n    let endDateMoment = new Date(year, month, day, 23, 59, 59)\n\n    // Create Subtitle\n    let formattedDateString = moment(startDateMoment).format('dddd, MMMM Do, YYYY')\n\n    // Send Data To Grouping\n    this.props.onChartClick({\n      formattedDateString: formattedDateString, // For View\n      startDateMoment: startDateMoment, // For Filter Query\n      endDateMoment: endDateMoment, // For Filter Query\n      selectedChip: chip // For Filter Query\n      // dateRange: dayMonthYear, // For Query\n      // rangeType: 'dmy' // For Query\n    })\n  }\n\n  isGreaterThanZero = (x) => {\n    return x > 0;\n  }\n\n  getOption = (orientation) => {\n    let colorOption = [\n      this.props.month.series.alerts.length && Colors.alerts,\n      this.props.month.series.traps.length && Colors.traps,\n      this.props.month.series.syslogs.length && Colors.syslogs,\n      this.props.month.series.winEvents.length && Colors.winEvents,\n      this.props.month.series.vmwEvents.length && Colors.vmwEvents\n    ]\n\n    let seriesOption = [\n      {\n        name: 'Alerts',\n        type: 'bar',\n        data: this.props.month.series.alerts,\n      },\n      {\n        name: 'Traps',\n        type: 'bar',\n        data: this.props.month.series.traps,\n      },\n      {\n        name: 'Syslogs',\n        type: 'bar',\n        data: this.props.month.series.syslogs,\n      },\n      {\n        name: 'Windows Events',\n        type: 'bar',\n        data: this.props.month.series.winEvents,\n      },\n      {\n        name: 'VMware Events',\n        type: 'bar',\n        data: this.props.month.series.vmwEvents,\n      }\n    ]\n\n    let legendDataOption = [\n      this.props.month.series.alerts.length && 'Alerts',\n      this.props.month.series.traps.length && 'Traps',\n      this.props.month.series.syslogs.length && 'Syslogs',\n      this.props.month.series.winEvents.length && 'Windows Events',\n      this.props.month.series.vmwEvents.length && 'VMware Events'\n    ]\n\n    switch (orientation) {\n      case 'desktopOption':\n        return {\n          ...defaultOption,\n          color: colorOption,\n          legend: {\n            data: legendDataOption,\n            ...desktopLegendOption,\n          },\n          ...defaultTooltipOption,\n          ...desktopGridOption,\n          xAxis: [\n            {\n              ...axisOption2,\n              data: this.props.month.xAxis\n            }\n          ],\n          yAxis: [\n            {\n              ...axisOption,\n              ...splitAreaOption,\n              splitNumber: 5\n            }\n          ],\n          dataZoom: desktopDataZoom,\n          series: seriesOption\n        }\n      case 'mobileOption':\n        return {\n          ...defaultOption,\n          color: colorOption,\n          legend: {\n            ...mobileLegendOption,\n            data: legendDataOption\n          },\n          ...defaultTooltipOption,\n          ...mobileGridOption,\n          yAxis: [\n            {\n              ...axisOption2,\n              ...splitAreaOption,\n              data: this.props.month.xAxis\n            }\n          ],\n          xAxis: [axisOption],\n          dataZoom: mobileDataZoom,\n          series: seriesOption\n        }\n      case 'mobileOption2':\n        return {\n          ...defaultOption,\n          color: colorOption,\n          legend: {\n            ...mobileLegendOption2,\n            data: legendDataOption\n          },\n          ...defaultTooltipOption,\n          ...mobileGridOption2,\n          yAxis: [\n            {\n              ...axisOption2,\n              ...splitAreaOption,\n              data: this.props.month.xAxis\n            }\n          ],\n          xAxis: [axisOption],\n          dataZoom: mobileDataZoom,\n          series: seriesOption\n        }\n    }\n  }\n\n\n  render() {\n    const { error, empty, month } = this.props\n\n    return (\n      <div className='month-bar'>\n\n        {/* Loader */}\n        {!error && (empty && !this.state.preLoaded) && <Loader />}\n\n        {/* Error */}\n        {error && <Error error={error} />}\n\n        {/* Desktop */}\n        {!error && (this.state.preLoaded || !empty) && <div className='chart-desktop'>\n          <ReactEcharts\n            option={this.getOption('desktopOption')}\n            style={{ height: 625 }}\n            ref={e => {\n              this.echartsReactRef1 = e\n            }}\n          />\n        </div>}\n\n        {/* Mobile */}\n        {!error && (this.state.preLoaded || !empty) && <div className='chart-mobile'>\n          <ReactEcharts\n            option={this.getOption('mobileOption')}\n            style={{ height: 625 }}\n            ref={e => {\n              this.echartsReactRef2 = e\n            }}\n          />\n        </div>}\n\n        {/* Mobile 2 */}\n        {!error && (this.state.preLoaded || !empty) && <div className='chart-mobile-2'>\n          <ReactEcharts\n            option={this.getOption('mobileOption2')}\n            style={{ height: 625 }}\n            ref={e => {\n              this.echartsReactRef3 = e\n            }}\n          />\n        </div>}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(MonthBar)\n\n\n\n\n\n\n","const hours = [\n    '12a',\n    '1a',\n    '2a',\n    '3a',\n    '4a',\n    '5a',\n    '6a',\n    '7a',\n    '8a',\n    '9a',\n    '10a',\n    '11a',\n    '12p',\n    '1p',\n    '2p',\n    '3p',\n    '4p',\n    '5p',\n    '6p',\n    '7p',\n    '8p',\n    '9p',\n    '10p',\n    '11p'\n]\nconst days = [\n    'S   ',\n    'F   ',\n    'T   ',\n    'W   ',\n    'T   ',\n    'M   ',\n    'S   '\n]\n\nconst desktopOption = {\n    tooltip: {\n        show: false,\n        position: 'top'\n    },\n    animation: false,\n    grid: {\n        left: 40,\n        right: 40,\n        bottom: 40,\n        top: 40,\n    },\n    xAxis: {\n        type: 'category',\n        data: hours,\n        splitArea: {\n            show: false\n        },\n        axisTick: {\n            show: false,\n        },\n        axisLine: {\n            show: false\n        },\n        axisLabel: {\n            color: '#818181',\n            size: 14,\n            fontWeight: 500,\n            lineHeight: 25\n        }\n    },\n    yAxis: {\n        // containLabel: true,\n\n        type: 'category',\n        data: days,\n        splitArea: {\n            show: true,\n            areaStyle: {\n                color: ['rgba(200,200,200,0)', 'rgb(26, 27, 29)'],\n            }\n        },\n        axisTick: {\n            show: false,\n        },\n        axisLine: {\n            show: false\n        },\n        axisLabel: {\n            // inside: true,\n            color: '#818181',\n            size: 14,\n            fontWeight: 500,\n            lineHeight: 40\n        },\n    }\n}\n\nconst mobileOption = {\n    tooltip: {\n        show: false,\n        position: 'top'\n    },\n    animation: false,\n    grid: {\n        left: 40,\n        right: 20,\n        bottom: 40,\n        top: 44,\n    },\n    yAxis: {\n        type: 'category',\n        data: hours,\n        splitArea: {\n            show: true,\n            areaStyle: {\n                color: ['rgba(200,200,200,0)', 'rgb(26, 27, 29)']\n            }\n        },\n        axisTick: {\n            show: false,\n        },\n        axisLine: {\n            show: false\n        },\n        axisLabel: {\n            color: '#818181',\n            size: 14,\n            fontWeight: 500,\n            lineHeight: 25\n        }\n    },\n    xAxis: {\n        // containLabel: true,\n        splitArea: {\n            show: false\n        },\n        type: 'category',\n        data: days,\n\n        axisTick: {\n            show: false,\n        },\n        axisLine: {\n            show: false\n        },\n        axisLabel: {\n            // inside: true,\n            color: '#818181',\n            size: 14,\n            fontWeight: 500,\n            lineHeight: 40\n        }\n    }\n}\n\nconst visualMapDefault = {\n    min: 0,\n    type: 'piecewise',\n    splitNumber: 3,\n    calculable: true,\n    orient: 'horizontal',\n    inRange: {\n        color: ['#5EDF64', '#FFF970', '#D34747']\n    },\n    textStyle: {\n        color: '#818181'\n    },\n    align: 'left',\n    itemWidth: 15,\n    precision: 0,\n    top: 10,\n    right: 'center'\n}\n\nconst seriesDefault = {\n    name: 'Events',\n    type: 'heatmap',\n}\n\nconst mobileSeriesLabelOption = {\n    label: {\n        normal: {\n            show: true,\n            color: '#2C2C2F',\n            fontWeight: 800\n        }\n    }\n}\n\nconst desktopSeriesLabelOption = {\n    label: {\n        normal: {\n            show: true,\n            color: '#2C2C2F',\n            fontWeight: 500\n        }\n    }\n}\n\nexport {\n    desktopOption,\n    mobileOption,\n    visualMapDefault,\n    seriesDefault,\n    mobileSeriesLabelOption,\n    desktopSeriesLabelOption\n}","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\n// Components\nimport Error from '../../Utility/Error/Error'\nimport Loader from '../../Utility/Loader/Loader'\n\n// Constants \nimport {\n  desktopOption,\n  mobileOption,\n  visualMapDefault,\n  seriesDefault,\n  mobileSeriesLabelOption,\n  desktopSeriesLabelOption\n} from '../../../constants/defaultChartOptions/defaultOptionWeekDensity'\n\n// Styles\nimport './week-density.scss'\n\n// Moment\nimport moment from 'moment'\n\n// Echarts\nimport ReactEcharts from 'echarts-for-react'\n\nclass WeekDensity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      preLoaded: false,\n      roundedMax: 9\n    }\n  }\n\n\n  componentDidUpdate(prevProps) {\n    if (!this.state.preLoaded && !this.props.empty) {\n      this.echartsInstance1 = this.echartsReactRef1.getEchartsInstance()\n      this.echartsInstance2 = this.echartsReactRef2.getEchartsInstance()\n      this.zr1 = this.echartsInstance1.getZr()\n      this.zr2 = this.echartsInstance2.getZr()\n\n      this.zr1.on('click', this.onWeekDensityClick)\n      this.zr2.on('click', this.onWeekDensityClick)\n      this.setState({ preLoaded: true })\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.week) {\n      let roundedMax = Math.ceil(props.week.max / 9.0) * 9\n      if (roundedMax > 0) {\n        return { roundedMax }\n      }\n    }\n    return null\n  }\n\n  onWeekDensityClick = (...rest) => {\n    this.setState({preLoaded: false})\n    const { startDate } = this.props\n    if (!rest[0].target || typeof rest[0].target.dataIndex !== \"number\") {\n      return\n    }\n    let index = rest[0].target.dataIndex\n    let yIndex = Math.floor(index / 24)\n    let xIndex = index % 24\n\n    // For Query\n    // const getSelectedDayInt = () => {\n    //   let startDateDayInt = moment(startDate).date()\n    //   return startDateDayInt + yIndex\n    // }\n    // let selectedDayInt = getSelectedDayInt()\n    // let selectedDay = startDate.getDate()\n    // let hourDayMonthYear = `h${xIndex}d${selectedDayInt}${monthYear}`\n\n    // Get Start/End Moments\n    let year = moment(startDate).year()\n    let month = moment(startDate).month()\n    let day = startDate.getDate() + yIndex\n    let endDateMoment = new Date(year, month, day, xIndex, 59, 59)\n    let startDateMoment = new Date(year, month, day, xIndex, 0, 0)\n\n    // Create Subtitle\n    let dayMonthDateString = moment(startDateMoment).format('dddd, MMMM Do')\n    let hourStart = moment(startDate).hour(xIndex).format('ha')\n    let hourEnd = moment(startDate).hour(xIndex + 1).format('ha')\n    let formattedDateString = `${dayMonthDateString}, ${hourStart} - ${hourEnd}`\n\n    // Send Data To Grouping\n    this.props.onChartClick({\n      formattedDateString: formattedDateString, // For View\n      startDateMoment: startDateMoment,// For Filter Query\n      endDateMoment: endDateMoment // For Filter Query\n      // dateRange: hourDayMonthYear, // For Query\n      // rangeType: 'hdmy'\n    })\n  }\n\n  updateCount = (width) => {\n    if (width > 1050 && width < 1500) {\n      this.setState({ count: 21 })\n      this.updateEvents()\n    } else {\n      this.setState({ count: 9 })\n      this.updateEvents()\n    }\n  }\n\n  updateEvents = () => {\n    this.setState({\n      pageCount: this.props.store.weekByTriggerObject.length / this.state.count,\n      events: this.props.store.weekByTriggerObject.slice(0, this.state.count)\n    })\n  }\n\n  handlePageClick = data => {\n    let page = data.selected\n    this.setState({ events: this.props.store.weekByTriggerObject.slice(page * this.state.count, page * this.state.count + this.state.count) })\n  }\n\n  getOption = orientation => {\n    switch(orientation) {\n      case 'desktop':\n      return {\n        ...desktopOption,\n        visualMap: {\n          max: this.state.roundedMax,\n          ...visualMapDefault\n        },\n        series: [\n          {\n            ...seriesDefault,\n            data: this.props.week.itemDensity.map(function (item) {\n              return [item[1], item[0], item[2]];\n            }),\n            ...desktopSeriesLabelOption,\n          }\n        ]\n      }\n    case 'mobile':\n      return {\n        ...mobileOption,\n        visualMap: {\n          max: this.state.roundedMax,\n          itemGap: 25,\n          width: '100%',\n          ...visualMapDefault\n        },\n        series: [\n          {\n            ...seriesDefault,\n            data: this.props.week.itemDensity,\n            ...mobileSeriesLabelOption,\n          }\n        ]\n      }\n    }\n  }\n\n  render() {\n    const { empty, error } = this.props\n    return (\n      <div className='week-density'>\n\n        {/* Loader */}\n        {(empty && !this.state.preLoaded) && <Loader />}\n\n        {/* Error */}\n        {error && <Error error={error} />}\n\n        {/* Desktop */}\n        {!error && (this.state.preLoaded || !empty) && <div className='chart-desktop'>\n          <ReactEcharts ref={e => { this.echartsReactRef1 = e }} option={this.getOption('desktop')} style={{ height: 625 }} />\n        </div>\n        }\n\n        {/* Mobile */}\n        {!error && (this.state.preLoaded || !empty) && <div className='chart-mobile'>\n          <ReactEcharts ref={e => { this.echartsReactRef2 = e }} option={this.getOption('mobile')} style={{ height: 625 }} />\n        </div>\n        }\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(WeekDensity)\n\n\n\n\n\n\n\n// mobileData.forEach((item, index, array)=>{\n//   let temp = item[0];\n//   item[0] = item[1]\n//   item[1] = temp\n//   array[index] = item\n// })\n\n// mobileData = mobileData.map(function(item) {\n//   return [item[1], item[0], item[2] || '-']\n// })\n\n","const defaultOption = {\n    tooltip: {\n        trigger: 'axis',\n\n        axisPointer: {\n            type: 'shadow',\n            shadowStyle: {\n                color: 'rgba(256,256,256,0.02)',\n                shadowColor: 'rgba(0, 0, 0, 1)',\n                shadowBlur: 10\n            }\n        }\n    },\n    calculable: true,\n    xAxis: [\n        {\n            type: 'category',\n            axisTick: { show: false },\n            axisLine: {\n                show: false\n            },\n            axisLabel: {\n                color: '#818181',\n                size: 14,\n                fontWeight: 500,\n                lineHeight: 25,\n                formatter: function (value, index) {\n                    // Formatted to be month/day; display year only in the first label\n                    switch (value) {\n                        case 'Sunday':\n                            return 'S'\n                        case 'Monday':\n                            return 'M'\n                        case 'Tuesday':\n                            return 'T'\n                        case 'Wednesday':\n                            return 'W'\n                        case 'Thursday':\n                            return 'T'\n                        case 'Friday':\n                            return 'F'\n                        case 'Saturday':\n                            return 'S'\n                    }\n\n                }\n            },\n            data: [\n                'Sunday',\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Saturday'\n            ]\n        }\n    ],\n    yAxis: [\n        {\n            type: 'value',\n\n            axisLine: {\n                show: false\n            },\n            axisLabel: {\n                color: '#818181',\n                size: 14,\n                fontWeight: 500,\n                lineHeight: 25,\n                formatter: (value, index) => {\n                    if (value > 999) {\n                        let thousands = value / 1000\n                        let label = thousands + 'k'\n                        return label\n                    }\n                    return Math.round(value)\n                }\n            },\n            axisTick: { show: false },\n            splitLine: {\n                show: false\n            },\n            splitArea: {\n                show: true,\n                areaStyle: {\n                    color: ['rgb(26, 27, 29)', 'rgba(200,200,200,0)']\n                }\n            }\n        }\n    ]\n}\n\nconst defaultOptionDesktop = {\n    ...defaultOption,\n    splitArea: {\n        show: true,\n        areaStyle: {\n            color: ['rgb(26, 27, 29)', 'rgba(200,200,200,0)']\n        }\n    },\n    grid: {\n        left: 40,\n        right: 40,\n        bottom: 40,\n        top: 40\n    },\n}\n\nconst defaultOptionMobile = {\n    ...defaultOption,\n    splitArea: {\n        show: true,\n        areaStyle: {\n            color: ['rgba(200,200,200,0)', 'rgb(26, 27, 29)']\n        }\n    }\n}\n\nexport {\n    defaultOptionDesktop,\n    defaultOptionMobile\n}","// Third Party\nimport React, { Component } from 'react'\nimport WindowSizeListener from 'react-window-size-listener'\nimport { withRouter } from 'react-router-dom'\nimport ReactEcharts from 'echarts-for-react'\n\n// Components\nimport Loader from '../../Utility/Loader/Loader'\nimport Error from '../../Utility/Error/Error'\n\n// Constants\nimport {Colors, getLevelFromHex} from '../../../constants/Colors'\nimport { defaultOptionDesktop, defaultOptionMobile } from '../../../constants/defaultChartOptions/defaultOptionStackedBar'\n\n// Styles\nimport './stacked-bar.scss'\n\n// Moment\nimport moment from 'moment'\n\nclass StackedBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            preLoaded: false,\n            max: null,\n            roundedMax: 70,\n            series: []\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (!this.state.preLoaded && !this.props.empty) {\n            this.echartsInstance1 = this.echartsReactRef1.getEchartsInstance()\n            this.echartsInstance2 = this.echartsReactRef2.getEchartsInstance()\n            this.echartsInstance3 = this.echartsReactRef3.getEchartsInstance()\n            this.echartsInstance4 = this.echartsReactRef4.getEchartsInstance()\n            this.zr1 = this.echartsInstance1.getZr()\n            this.zr2 = this.echartsInstance2.getZr()\n            this.zr3 = this.echartsInstance3.getZr()\n            this.zr4 = this.echartsInstance4.getZr()\n\n            this.zr1.on('click', this.onStackedBarClick)\n            this.zr2.on('click', this.onStackedBarClick)\n            this.zr3.on('click', this.onStackedBarClick)\n            this.zr4.on('click', this.onStackedBarClick)\n            this.setState({ preLoaded: true })\n        }\n    }\n\n    // static getDerivedStateFromProps(props, state) {\n    //     let series = []\n    //     if(!props.empty) {\n    //         series = props.weekSeverity.weekSeverity.series || []\n    //     }\n    //     console.log(series)\n    //     if(series.length) {\n    //         return {\n    //             series\n    //         }\n    //     } else {\n    //         return {}\n    //     }\n        \n    // }\n\n    // static getDerivedStateFromProps(prevProps, nextState) {\n    //     let maxs = []\n    //     let sun = []\n    //     let mon = []\n    //     let tues = []\n    //     let wed = []\n    //     let thurs = []\n    //     let fri = []\n    //     let sat = []\n\n    //     const { series } = prevProps.weekSeverity.weekSeverity\n\n    //     series.map((x) => {\n    //         sun.push(x.data[0])\n    //         mon.push(x.data[1])\n    //         tues.push(x.data[2])\n    //         wed.push(x.data[3])\n    //         thurs.push(x.data[4])\n    //         fri.push(x.data[5])\n    //         sat.push(x.data[6])\n    //     })\n\n    //     let sunSum = sun.reduce((a, b) => a + b, 0)\n    //     let monSum = mon.reduce((a, b) => a + b, 0)\n    //     let tuesSum = tues.reduce((a, b) => a + b, 0)\n    //     let wedSum = wed.reduce((a, b) => a + b, 0)\n    //     let thursSum = thurs.reduce((a, b) => a + b, 0)\n    //     let friSum = fri.reduce((a, b) => a + b, 0)\n    //     let satSum = sat.reduce((a, b) => a + b, 0)\n\n    //     maxs.push(sunSum, monSum, tuesSum, wedSum, thursSum, friSum, satSum)\n\n    //     let max = Math.max(...maxs)\n    //     let bufferedMax = +max + 50\n    //     let roundedMax = Math.ceil(bufferedMax / 7.0) * 7\n\n    //     // If there is data, set it as new series\n    //     if (series.length) {\n    //         return { roundedMax, series, noData: false}\n    //     }\n    //     // If no data in result, clear series\n    //     return { roundedMax: 70, noData: true }\n    // }\n    // // If no data in result, clear series\n    // return { roundedMax: 70, noData: true }\n    //     }    \n    //     return null\n    // }\n\n\n    onStackedBarClick = (...rest) => {\n        this.setState({ preloaded: false })\n  \n        const { startDate, monthYear } = this.props\n        if (!rest[0].target || typeof rest[0].target.dataIndex !== \"number\") {\n            return\n        }\n        let index = rest[0].target.dataIndex\n        let chip = getLevelFromHex(rest[0].target['__cachedNormalStl'].fill)\n        // For Query\n        // const getSelectedDayInt = () => {\n        //   let startDateDayInt = Number(moment(startDate).date())\n        //   return startDateDayInt + index\n        // }\n        // let selectedDayInt = getSelectedDayInt()\n        // let dayMonthYear = `d${selectedDayInt}${monthYear}`\n\n        // Get Start/End Moments\n        let year = moment(startDate).year()\n        let month = moment(startDate).month()\n        let day = startDate.getDate() + index\n        let startDateMoment = new Date(year, month, day, 0, 0, 0)\n        let endDateMoment = new Date(year, month, day, 23, 59, 59)\n\n        // Create Subtitle\n        let formattedDateString = moment(startDateMoment).format('dddd, MMMM Do, YYYY')\n\n        // Send Data To Grouping\n        this.props.onChartClick({\n            formattedDateString: formattedDateString, // For View\n            startDateMoment: startDateMoment, // For Filter Query\n            endDateMoment: endDateMoment, // For Filter Query\n            selectedChip: chip, // For Filter Query\n            chipType: \"level\" \n            // dateRange: dayMonthYear, // For Query\n            // rangeType: 'dmy' // For Query\n        })\n    }\n\n\n    getOption = (orientation) => {\n        let defaultOption = {\n            color: [\n                this.props.weekSeverity.weekSeverity.series.critical.length && Colors.critical,\n                this.props.weekSeverity.weekSeverity.series.informational.length && Colors.informational,\n                this.props.weekSeverity.weekSeverity.series.notice.length && Colors.notice,\n                this.props.weekSeverity.weekSeverity.series.serious.length && Colors.serious,\n                this.props.weekSeverity.weekSeverity.series.warning.length && Colors.warning,\n                this.props.weekSeverity.weekSeverity.series.alert.length && Colors.alert,\n                this.props.weekSeverity.weekSeverity.series.emergency.length && Colors.emergency,\n                this.props.weekSeverity.weekSeverity.series.error.length && Colors.error,\n                this.props.weekSeverity.weekSeverity.series.unknown.length && Colors.unknown,\n            ],\n            legend: {\n                data: [\n                    this.props.weekSeverity.weekSeverity.series.critical.length && 'Critical', \n                    this.props.weekSeverity.weekSeverity.series.informational.length && 'Informational', \n                    this.props.weekSeverity.weekSeverity.series.notice.length && 'Notice', \n                    this.props.weekSeverity.weekSeverity.series.serious.length && 'Serious', \n                    this.props.weekSeverity.weekSeverity.series.warning.length && 'Warning', \n                    this.props.weekSeverity.weekSeverity.series.alert.length && 'Alert', \n                    this.props.weekSeverity.weekSeverity.series.emergency.length && 'Emergency', \n                    this.props.weekSeverity.weekSeverity.series.error.length && 'Error', \n                    this.props.weekSeverity.weekSeverity.series.unknown.length && 'Unknown'\n                ],\n                top: 10,\n                right: 'center',\n                orient: 'horizontal',\n                itemWidth: 15,\n                itemGap: 15,\n                width: '100%',\n                textStyle: {\n                    color: '#818181'\n                }\n            },\n            series: [\n                this.props.weekSeverity.weekSeverity.series.critical && {\n                    name: 'Critical',\n                    type: 'bar',\n                    stack: 'items',\n                    data: this.props.weekSeverity.weekSeverity.series.critical\n                },\n                this.props.weekSeverity.weekSeverity.series.informational && {\n                    name: 'Informational',\n                    type: 'bar',\n                    stack: 'items',\n                    data: this.props.weekSeverity.weekSeverity.series.informational\n                },\n                this.props.weekSeverity.weekSeverity.series.notice && {\n                    name: 'Notice',\n                    type: 'bar',\n                    stack: 'items',\n                    data: this.props.weekSeverity.weekSeverity.series.notice\n                },\n                this.props.weekSeverity.weekSeverity.series.serious && {\n                    name: 'Serious',\n                    type: 'bar',\n                    stack: 'items',\n                    data: this.props.weekSeverity.weekSeverity.series.serious\n                },\n                this.props.weekSeverity.weekSeverity.series.warning && {\n                    name: 'Warning',\n                    type: 'bar',\n                    stack: 'items',\n                    data: this.props.weekSeverity.weekSeverity.series.warning\n                },\n            \n                this.props.weekSeverity.weekSeverity.series.alert && {\n                    name: 'Alert',\n                    type: 'bar',\n                    stack: 'items',\n                    data: this.props.weekSeverity.weekSeverity.series.alert\n                },\n                this.props.weekSeverity.weekSeverity.series.emergency && {\n                    name: 'Emergency',\n                    type: 'bar',\n                    stack: 'items',\n                    data: this.props.weekSeverity.weekSeverity.series.emergency\n                },\n                this.props.weekSeverity.weekSeverity.series.error && {\n                    name: 'Error',\n                    type: 'bar',\n                    stack: 'items',\n                    data: this.props.weekSeverity.weekSeverity.series.error\n                },\n                this.props.weekSeverity.weekSeverity.series.unknown && {\n                    name: 'Unknown',\n                    type: 'bar',\n                    stack: 'items',\n                    data: this.props.weekSeverity.weekSeverity.series.unknown\n                }\n            ]\n        }\n        switch (orientation) {\n            case 'desktopOption':\n                return {\n                   ...defaultOption,\n                   ...defaultOptionDesktop\n                }\n            case 'mobileOption':\n                return {\n                    ...defaultOption,\n                    ...defaultOptionMobile,\n                    grid: {\n                        left: 40,\n                        right: 40,\n                        bottom: 40,\n                        top: 40\n                    },\n                }\n\n            case 'mobileOption2':\n                return {\n                    ...defaultOption,\n                    ...defaultOptionMobile,\n                    grid: {\n                        left: 40,\n                        right: 20,\n                        bottom: 40,\n                        top: 70\n                        // top: 40\n                        // @1350px top: 65\n                        // @459px top: 100\n                    }\n                }\n            case 'mobileOption3':\n                return {\n                    ...defaultOption,\n                    ...defaultOptionMobile,\n                    grid: {\n                        left: 40,\n                        right: 20,\n                        bottom: 40,\n                        top: 100\n                        // top: 40\n                        // @1350px top: 65\n                        // @459px top: 100\n                    }\n                }\n        }\n    }\n\n\n\n    render() {\n        const { weekSeverity, empty, error } = this.props\n   \n        return (\n            <div className='stacked-bar'>\n\n                {/* Loader */}\n                {(empty && !this.state.preLoaded) && <Loader />}\n\n                {/* Error */}\n                {error && `Error! ${error.message}`}\n\n                {/* Desktop */}\n                {!error && (this.state.preLoaded || !empty) && <div className='chart-desktop'>\n                    <ReactEcharts\n                        option={this.getOption('desktopOption')}\n                        style={{ height: 625 }}\n                        ref={e => {\n                            this.echartsReactRef1 = e\n                        }}\n                    />\n                </div>}\n\n                {/* Mobile */}\n                {!error && (this.state.preLoaded || !empty) && <div className='chart-mobile'>\n                    <ReactEcharts\n                        option={this.getOption('mobileOption')}\n                        style={{ height: 625 }}\n                        ref={e => {\n                            this.echartsReactRef2 = e\n                        }}\n                    />\n                </div>}\n\n                {!error && (this.state.preLoaded || !empty) && <div className='chart-mobile2'>\n                    <ReactEcharts\n                        option={this.getOption('mobileOption2')}\n                        style={{ height: 625 }}\n                        ref={e => {\n                            this.echartsReactRef3 = e\n                        }}\n                    />\n                </div>}\n\n                {!error && (this.state.preLoaded || !empty) && <div className='chart-mobile3'>\n                    <ReactEcharts\n                        option={this.getOption('mobileOption3')}\n                        style={{ height: 625 }}\n                        ref={e => {\n                            this.echartsReactRef4 = e\n                        }}\n                    />\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(StackedBar)\n\n\n\n","import { useEffect, useRef } from 'react'\n\nexport const useReturnPrevProps = (val) => {\n    const ref = useRef()\n    useEffect(() => {\n        ref.current = val\n    })\n    return ref.current\n}\n","import React, { useState, useEffect } from 'react'\n\n// Styles Imports\nimport './event-by-trigger-object.scss'\n\n// Component Imports\nimport Loader from '../Utility/Loader/Loader'\n\n// Hooks Imports\nimport { useReturnPrevProps } from '../../hooks/returnPrevProps'\n\nconst EventList = props => {\n  const { data, count, error, empty } = props\n  const [preLoaded, setPreLoaded] = useState(false)\n  const prevEmpty = useReturnPrevProps(empty)\n\n  useEffect(() => {\n    if(!preLoaded && prevEmpty !== empty) {\n      setPreLoaded(true)\n    }\n  })\n\n  const handleTriggerClick = name => {\n    props.onTriggerClick({ name })\n  }\n\n  return (\n    <div className=\"event-by-trigger-object\">\n      {/* Loader */}\n      {(empty && !preLoaded) && <Loader />}\n\n      {/* Error */}\n      {error && `Error: ${error}`}\n\n      {/* Desktop */}\n      {!error && data.entities && (preLoaded || !empty) && data.entities.length ? <ul className=\"trigger-object-list\">\n        {data.entities.map((entity, index) => {\n          return (\n            <li\n              key={entity.name}\n              className={`${\n                index % (count - 1) === 0 && index !== 0 ? 'last' : ''\n                }`}\n              onClick={() => { handleTriggerClick(entity.name) }}\n            >\n              <div className='name'>\n                {entity.name}\n              </div>\n              <span className='count'>\n                {entity.items.length}\n              </span>\n            </li>\n          )\n        })}\n      </ul> : <div className=\"no-results\">No Results Were Found...</div>}\n    </div>\n  )\n}\n\nexport default EventList\n","import React from 'react'\nimport './pagination.scss'\n\n// Package Imports\nimport ReactPaginate from 'react-paginate'\n\nconst Pagination = props => {\n    const { pageCount, handlePageClick, listView } = props\n    return (\n      <div className={`pagination ${listView ? 'listView' : ''}`}>\n        <ReactPaginate\n          previousLabel={'previous'}\n          nextLabel={'next'}\n          breakLabel={'...'}\n          breakClassName={'break-me'}\n          pageCount={pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={3}\n          onPageChange={handlePageClick}\n          pageLinkClassName=\"link\"\n          activeLinkClassName=\"active-link\"\n          containerClassName={'react-paginate'}\n          subContainerClassName={'pages react-paginate'}\n          activeClassName={'active'}\n        />\n      </div>\n    )\n}\n\nexport default Pagination\n","import React, { useState, useEffect } from 'react'\n\n// Styles Imports\nimport './event-list.scss'\n\n// Component Imports\nimport Loader from '../Utility/Loader/Loader'\nimport Error from '../Utility/Error/Error'\n\n// Ionicons Imports\nimport IosArrowDown from 'react-ionicons/lib/IosArrowDown'\nimport IosArrowUp from 'react-ionicons/lib/IosArrowUp'\n\n// React Table Imports\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\"\n\n// Moment\nimport Moment from 'react-moment'\n\n// Hooks Imports\nimport { useReturnPrevProps } from '../../hooks/returnPrevProps'\n\nconst EventList = props => {\n  const { items, error, empty } = props\n  const [preLoaded, setPreLoaded] = useState(false)\n  const [orderByCalled, setOrderByCalled] = useState(false)\n  const [stateSelected, setStateSelected] = useState('name')\n  const [direction, setDirection] = useState('_ASC')\n  // const [truncdItems, setTruncdItems] = useState(null)\n  // const [mouseOver, setMouseOver] = useState(false)\n  const prevEmpty = useReturnPrevProps(empty)\n\n  useEffect(() => {\n    if(!preLoaded && prevEmpty !== empty) {\n      setPreLoaded(true)\n    }\n  })\n\n  // Pass orderBy Up To Grouping\n  const callOrderBy = orderBy => {\n    props.setOrderBy(orderBy)\n  }\n\n  // Manage Direction & OrderBy Values\n  const setToggleOrderBy = selected => {\n    if (selected !== stateSelected) {\n      // set orderby_asc\n      let direction = '_ASC'\n      let orderBy = selected.concat(direction)\n      callOrderBy(orderBy)\n      setStateSelected(selected)\n      setDirection(direction)\n      setOrderByCalled(false)\n    } else {\n      // toggle orderby (selected + _ASC / _DESC)\n      if (this.state.direction === '_ASC') {\n        let orderBy = selected.concat('_DESC')\n        callOrderBy(orderBy)\n        setDirection('_DESC')\n        setOrderByCalled(false)\n      } else {\n        let orderBy = selected.concat('_ASC')\n        callOrderBy(orderBy)\n        setDirection('_ASC')\n        setOrderByCalled(false)\n      }\n    }\n  }\n\n  // Display OrderBy Icon\n  const displayOrderByIcon = () => {\n    if (direction === '_ASC') {\n      return <IosArrowUp color=\"#68686E\" fontSize=\"14px\" />\n    } else {\n      return <IosArrowDown color=\"#68686E\" fontSize=\"14px\" />\n    }\n  }\n\n  // mouseOver = () => {\n  //   setTimeout(() => { \n  //     this.setState({ mouseOver: true })\n  //   }, 1500)\n  // }\n\n  // mouseOut = () => {\n  //     // if()\n  //     // this.setState({ mouseOver: false })\n  // }\n\n  return (\n    <div className=\"event-list\">\n\n      {/* Loader */}\n      {!error && (empty && !preLoaded) && <Loader />}\n\n      {/* Error */}\n      {error && <Error error={error} />}\n\n      {!error && (preLoaded || !empty) &&\n        <Table>\n          <Thead>\n            <Tr>\n              <Th onClick={() => setToggleOrderBy('name')} className={`${stateSelected === 'name' ? 'selected' : ''}`}>Name{displayOrderByIcon()}</Th>\n              <Th onClick={() => setToggleOrderBy('type')} className={`narrow ${stateSelected === 'type' ? 'selected' : ''}`}>Type{displayOrderByIcon()}</Th>\n              <Th onClick={() => setToggleOrderBy('level')} className={`narrow ${stateSelected === 'level' ? 'selected' : ''}`}>Level{displayOrderByIcon()}</Th>\n              <Th>Trigger</Th>\n              <Th onClick={() => setToggleOrderBy('triggerTime')} className={`${stateSelected === 'triggerTime' ? 'selected' : ''}`}>Trigger Time{displayOrderByIcon()}</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {items && items.map((item, index, array) => {\n              return <Tr key={index} className={`body ${index !== 0 && index % 10 === 0 ? 'last' : ''} ${index % 2 === 1 ? 'dark' : ''}`}>\n                <Td>\n                  <span className=\"name\">\n                    {item.name}\n                  </span>\n                </Td>\n                <Td className=\"narrow\">\n                  <span>{item.type}</span>\n                </Td>\n                <Td className=\"narrow\">\n                  <span>\n                    {item.level}\n                  </span>  </Td>\n                <Td>\n                  {/* <span className={`full-string ${this.state.mouseOver === true ? 'show' : ''}`}>HEllo</span> */}\n                  {/* <span className=\"node\" onMouseOver={this.mouseOver()} onMouseOut={this.mouseOut}>{item.trigger.name}</span> */}\n                  <div className=\"neutralize node\">\n                    <span className=\"node\">{item.trigger.name}</span>\n                  </div>\n\n                </Td>\n                <Td>\n                  <div className=\"neutralize\">\n                    {/* <span className=\"space-around\">at</span> */}\n                    <span><Moment date={item.triggerTime} format='h:mma'></Moment></span>\n                    <span className=\"space-around\">on</span>\n                    <span><Moment date={item.triggerTime} format='MMM D'></Moment></span>\n                  </div>\n                </Td>\n              </Tr>\n            })}\n          </Tbody>\n        </Table>}\n    </div>\n  )\n}\n\nexport default EventList","import React, { useState, useEffect, forwardRef } from 'react'\n\n//Styles Imports\nimport './date-range.scss'\n\n// Moment\nimport Moment from 'react-moment'\nimport moment from 'moment'\n\n// Month Picker\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\"\n\n// Week Picker\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\n// Ionicons\nimport MdArrowDropdown from 'react-ionicons/lib/MdArrowDropdown'\n\n// Week Picker Logic\nconst getWeekDays = (weekStart) => {\n  const days = [weekStart]\n  for (let i = 1; i < 7; i += 1) {\n    days.push(\n      moment(weekStart)\n        .add(i, 'days')\n        .toDate()\n    );\n  }\n  return days\n}\n\nconst getWeekRange = (date) => {\n  return {\n    from: moment(date)\n      .startOf('week')\n      .toDate(),\n    to: moment(date)\n      .endOf('week')\n      .toDate(),\n  }\n}\n\nconst Input = forwardRef((props, ref) => {\n  return (\n    <button\n      className=\"btn picker-input\"\n      onClick={props.onClick}\n      ref={ref}\n    >\n      {props.value}\n      <MdArrowDropdown color=\"#68686E\" />\n    </button>\n  )\n})\n\nconst DateRange = props => {\n  const { startDate, endDate, duration, location, params } = props\n  const [startDateMonth, setStartDateMonth] = useState(new Date())\n  const [showWeekPicker, setShowWeekPicker] = useState(false)\n  const [showDropDown, setShowDropDown] = useState(false)\n  const [hoverRange, setHoverRange] = useState(undefined)\n  const [selectedDays, setSelectedDays] = useState(props.selectedDays)\n  const [selectedDay, setSelectedDay] = useState(undefined)\n  const [dropDownDuration, setDropDownDuration] = useState(null)\n  const [initDashboard, setInitDashboard] = useState(false)\n  const [initListPage, setInitListPage] = useState(false)\n\n\n  // Component Did Mount\n  useEffect(() => {\n    // Initialize Start/End Date\n    if (startDate === null && endDate === null) {\n      let day = new Date()\n      let y = moment(day).year()\n      let m = moment(day).month()\n      switch (duration) {\n        case 'm':\n          let startDateMonth = new Date(y, m, 1, 0, 0, 0)\n          let endDateMonth = new Date(y, m + 1, 0, 23, 59, 59)\n          props.setStartEndDates(startDateMonth, endDateMonth)\n          return\n        case 'w':\n          let selectedDays = getWeekDays(getWeekRange(day).from)\n          let startDateWeek = selectedDays[0]\n          let endDateInt = Number(moment(selectedDays[6]).date())\n          let endDateWeek = new Date(y, m, endDateInt, 23, 59, 59)\n          props.setStartEndDates(startDateWeek, endDateWeek)\n      }\n    }\n\n    // Initialize Date Range\n    if (location !== '/list' && initDashboard === false) {\n      let day = new Date()\n      let y = moment(day).year()\n      let m = moment(day).month()\n      switch (duration) {\n        case 'm':\n          let startDateMonth = new Date(y, m, 1, 0, 0, 0)\n          let endDateMonth = new Date(y, m + 1, 0, 23, 59, 59)\n          props.setStartEndDates(startDateMonth, endDateMonth)\n          setInitDashboard(true)\n        case 'w':\n          let selectedDays = getWeekDays(getWeekRange(day).from)\n          let startDateWeek = selectedDays[0]\n          let endDateInt = Number(moment(selectedDays[6]).date())\n          let endDateWeek = new Date(y, m, endDateInt, 23, 59, 59)\n          props.setStartEndDates(startDateWeek, endDateWeek)\n          setInitDashboard(true)\n        default:\n          return\n      }\n    }\n\n    // Initialize Date Range On ListPage\n    if (location === '/list' && !initListPage) {\n      const { duration, startDateMoment, endDateMoment } = params\n      if (duration === 'm') {\n        props.setStartEndDates(startDateMoment, endDateMoment)\n        setDropDownDuration('m')\n        setStartDateMonth(startDateMonth)\n        setInitListPage(true)\n      }\n      if (duration === 'w') {\n        props.setStartEndDates(startDateMoment, endDateMoment)\n        let selectedDays = getWeekDays(getWeekRange(startDateMoment).from)\n        setDropDownDuration('w')\n        setSelectedDays(selectedDays)\n        setInitListPage(true)\n      }\n    }\n  }, [])\n\n  // Open DropDown OnClick\n  const openDropDown = () => {\n    setShowDropDown(!showDropDown)\n  }\n\n  // Month Picker handleChange\n  const handleChange = selectedMonth => {\n    // Get Values\n    let month = moment(selectedMonth).month()\n    let year = moment(selectedMonth).year()\n    let startDate = new Date(year, month, 1, 0, 0, 0)\n    let endDate = new Date(year, month + 1, 0, 23, 59, 59)\n\n    // Formatting\n    let monthYear = `m${month}y${year}`\n\n    // Close DropDown\n    if (props.location === '/list') {\n      openDropDown()\n    }\n\n    // SetState/Pass Data Up To Grouping\n    // this.props.dateChanged()\n    props.setDurationVal(null, monthYear, props.duration)\n    props.setStartEndDates(startDate, endDate)\n    setStartDateMonth(selectedMonth)\n    setDropDownDuration('m')\n  }\n\n  // OnClick Open Week Picker\n  const openWeekPicker = () => {\n    setShowWeekPicker(!showWeekPicker)\n  }\n\n  const getSelectedWeekDays = selectedDays => {\n    setSelectedDays(selectedDays)\n  }\n\n  // Week Picker Logic\n  const handleDayChange = date => {\n    // Get Values\n    let selectedDays = getWeekDays(getWeekRange(date).from)\n    let year = moment(date).year()\n    let month = moment(date).month() // Temporary, until queries can accept hourDayWeekYear\n    let week = moment(date).week()\n\n    let startDate = selectedDays[0]\n    let endDateInt = Number(moment(selectedDays[6]).date())\n    let endDate = new Date(year, month, endDateInt, 23, 59, 59)\n\n    // Formatting\n    let weekYear = `w${week}y${year}`\n    let monthYear = `m${month}y${year}` // Temporary, until queries can accept hourDayWeekYear\n\n    // SetState/Pass Data Up To Grouping\n    setSelectedDays(selectedDays)\n    setShowWeekPicker(false)\n    setDropDownDuration('w')\n\n    // Close Picker\n    openWeekPicker()\n    // Close DropDown\n    if (props.location === '/list') {\n      openDropDown()\n    }\n    // this.props.dateChanged()\n    props.setDurationVal(weekYear, monthYear, duration)\n    props.setStartEndDates(startDate, endDate)\n  }\n\n  const handleDayEnter = date => {\n    setHoverRange(getWeekRange(date))\n  }\n\n  const handleDayLeave = () => {\n    setHoverRange(undefined)\n  }\n\n  const handleWeekClick = (weekNumber, days, e) => {\n    setSelectedDays(days)\n  }\n\n  // Set State For Day Picker\n  const handleDayClick = day => {\n    // Get Start/End Moments\n    let year = moment(day).year()\n    let month = moment(day).month()\n    let date = day.getDate()\n    let startDayMoment = new Date(year, month, date, 0, 0, 0)\n    let endDayMoment = new Date(year, month, date, 23, 59, 59)\n\n    // Close DropDown\n    if (location === '/list') {\n      openDropDown()\n    }\n    // this.props.dateChanged()\n    props.setStartEndDates(startDayMoment, endDayMoment)\n    setSelectedDay(day)\n    setDropDownDuration('d')\n  }\n\n  // Close Pickers On Overlay Click\n  const closePickers = () => {\n    setShowWeekPicker(false)\n    setShowDropDown(false)\n  }\n\n  // Format DropDown Input\n  const formatDropDownInput = () => {\n    switch (dropDownDuration) {\n      case 'd':\n        return <Moment format=\"LL\">{selectedDay}</Moment>\n      case 'm':\n        return <Moment format=\"MMMM YYYY\">\n          {startDateMonth}\n        </Moment>\n      case 'w':\n        return <div>\n          {selectedDays.length === 7 && (\n            <div onClick={openWeekPicker}>\n              {moment(selectedDays[0]).format('LL')} –{' '}\n              {moment(selectedDays[6]).format('LL')}\n            </div>\n          )}\n        </div>\n      default:\n        return <span>{props.text}</span>;\n    }\n  }\n\n  // const { showWeekPicker, selectedDays, selectedDay, hoverRange } = this.state\n  const notListPage = location !== '/list'\n  // Week Picker Logic\n  const daysAreSelected = selectedDays.length > 0\n\n  const modifiers = {\n    hoverRange,\n    selectedRange: daysAreSelected && {\n      from: selectedDays[0],\n      to: selectedDays[6],\n    },\n    hoverRangeStart: hoverRange && hoverRange.from,\n    hoverRangeEnd: hoverRange && hoverRange.to,\n    selectedRangeStart: daysAreSelected && selectedDays[0],\n    selectedRangeEnd: daysAreSelected && selectedDays[6],\n  }\n  return (\n    <div className='date-picker'>\n      <div className={`overlay ${showDropDown || showWeekPicker ? 'show' : ''}`} onClick={closePickers} />\n\n      {/* ListView Pickers */}\n      {location === \"/list\" && <div className=\"picker-wrapper\" style={{ position: 'relative' }}>\n        <button className=\"btn picker-input\" onClick={openDropDown}>\n          {formatDropDownInput()}\n          <MdArrowDropdown color=\"#68686E\" />\n        </button>\n        <div className={`drop-down ${showDropDown ? 'show-drop-down' : ''}`}>\n          <div className=\"arrow-up\"></div>\n          <ul>\n            <li>\n              Day\n                <div className=\"bridge\" />\n              <div className=\"drop-down-day-picker\">\n                <DayPicker\n                  month={selectedDay}\n                  onDayClick={handleDayClick}\n                  selectedDays={selectedDay}\n                  showOutsideDays\n                  disabledDays={[\n                    {\n                      after: new Date(),\n                    }\n                  ]}\n                />\n              </div>\n            </li>\n            <li>\n              Week\n                <div className=\"bridge\" />\n              <div className=\"drop-down-week-picker\">\n                <DayPicker\n                  month={selectedDays[0]}\n                  selectedDays={selectedDays}\n                  showOutsideDays\n                  modifiers={modifiers}\n                  onDayClick={handleDayChange}\n                  onDayMouseEnter={handleDayEnter}\n                  onDayMouseLeave={handleDayLeave}\n                  onWeekClick={handleWeekClick}\n                  disabledDays={[\n                    {\n                      after: new Date(),\n                    }\n                  ]}\n                />\n              </div>\n            </li>\n            <li>\n              Month\n                <div className=\"bridge\" />\n              <div className=\"drop-down-month-picker\">\n                <DatePicker\n                  openToDate={startDateMonth}\n                  value={startDateMonth}\n                  customInput={<Input />}\n                  inline\n                  selected={startDateMonth}\n                  onChange={handleChange}\n                  dateFormat=\"MMMM yyyy\"\n                  showMonthYearPicker\n                  maxDate={new Date()}\n                />\n              </div>\n            </li>\n            {/* <li>Custom</li> */}\n          </ul>\n        </div>\n      </div>}\n\n      {/* Dashboard Pickers */}\n      {/* Month Picker */}\n      {duration === 'm' && notListPage && <div className=\"picker-wrapper\">\n        <DatePicker\n          openToDate={startDateMonth}\n          value={startDateMonth}\n          customInput={<Input />}\n          selected={startDateMonth}\n          onChange={handleChange}\n          dateFormat=\"MMMM yyyy\"\n          showMonthYearPicker\n          maxDate={new Date()}\n        />\n      </div>}\n\n      <div className=\"picker-wrapper\">\n        {/* Week Picker */}\n        {duration === 'w' && notListPage && <button className=\"btn\">\n          {selectedDays.length === 7 && (\n            <div onClick={openWeekPicker} className=\"picker-input\">\n              {moment(selectedDays[0]).format('LL')} –{' '}\n              {moment(selectedDays[6]).format('LL')}\n            </div>\n          )}\n          <MdArrowDropdown color=\"#68686E\" />\n          {showWeekPicker ? <div className=\"week-picker\">\n            <div className=\"arrow-up\"></div>\n            <DayPicker\n              month={selectedDays[0]}\n              selectedDays={selectedDays}\n              showOutsideDays\n              modifiers={modifiers}\n              onDayClick={handleDayChange}\n              onDayMouseEnter={handleDayEnter}\n              onDayMouseLeave={handleDayLeave}\n              onWeekClick={handleWeekClick}\n              disabledDays={[\n                {\n                  after: new Date(),\n                }\n              ]}\n            />\n          </div> : <div />}\n        </button>}\n      </div>\n\n    </div>\n  )\n}\n\nexport default DateRange\n","import React from 'react'\nimport './button.scss'\n\nconst Button = props => {\n    const { onClick, buttonType, children } = props\n    return (\n      <div className={`button ${buttonType}`} onClick={onClick}>{children}</div>\n    )\n}\n\nexport default Button\n","import gql from \"graphql-tag\"\n\nconst DUPLICATE_GROUPING_MUTATION = gql`\nmutation DuplicateGroupingMutation($grouping: createGroupingInput!) {\n  createGrouping(data: $grouping) {\n    success\n  }\n}\n`\n\nconst DELETE_GROUPING_MUTATION = gql`\nmutation DeleteGroupingMutation($id: ID!) {\n    deleteGrouping(data: $id) {\n    success\n  }\n}\n`\n\nconst UPDATE_GROUPING_MUTATION = gql`\nmutation UpdateGroupingMutation($title: String, $chips: [String], $id: ID) {\n    updateGrouping(data: {title: $title, chips: $chips, id: $id}) {\n    success\n  }\n}\n`\n\nexport {\n    DUPLICATE_GROUPING_MUTATION,\n    DELETE_GROUPING_MUTATION,\n    UPDATE_GROUPING_MUTATION\n} ","import React, { useState, useEffect } from 'react'\nimport { Mutation } from 'react-apollo'\n\n// Styles Imports\nimport './menu.scss'\n\n// Icon Imports\nimport IosOptionsOutline from 'react-ionicons/lib/IosOptionsOutline'\nimport IosMore from 'react-ionicons/lib/IosMore'\n\n// Component Imports\nimport Button from '../Button/Button'\n\n// Mutations\nimport {\n  DUPLICATE_GROUPING_MUTATION,\n  UPDATE_GROUPING_MUTATION,\n} from '../../Grouping/GroupingMutations'\n\nconst Menu = props => {\n  const { editing, toggleEditMode, showDelModal, showMenu, formattedGroupingData, groupingID, updatedHeaderTitle, chips, showDupModal } = props\n  const [succes, setSuccess] = useState(false)\n  const [groupingUpdated, setGroupingUpdated] = useState(false)\n  const [groupingDuplicated, setGroupingDuplicated] = useState(false)\n\n  useEffect(() => {\n    if (groupingDuplicated && !showDupModal) {\n      props.showDupModalFunc()\n      setGroupingDuplicated(false)\n    }\n    if (groupingUpdated) {\n      props.groupingUpdated()\n      setGroupingUpdated(false)\n    }\n  }, [groupingDuplicated, groupingUpdated])\n\n  // Toggle Show Menu On Icon Click\n  const toggleShowMenu = () => {\n    props.toggleShowMenu()\n  }\n\n  // Close Menu On Overlay Click\n  const closeMenu = () => {\n    props.closeMenu()\n  }\n\n  // Save Edit\n  const saveEdit = () => {\n    closeMenu()\n    props.saveEditRecievesTitle()\n  }\n\n  // Cancel Edit\n  const cancelEdit = () => {\n    closeMenu()\n    props.editClick()\n  }\n\n  return (\n    <div className=\"menu-component\">\n      {!editing ? <div>\n        <div className={`overlay ${showMenu ? 'show' : ''}`} onClick={closeMenu} />\n        <IosMore onClick={toggleShowMenu} color=\"#68686E\" fontSize=\"26px\" />\n        {showMenu && <div>\n          <ul className=\"dropdown\">\n\n            <li onClick={toggleEditMode}>Edit</li>\n\n            <Mutation mutation={DUPLICATE_GROUPING_MUTATION} variables={{ grouping: formattedGroupingData }} onCompleted={(data) => { setGroupingDuplicated(data.createGrouping.success) }}>\n              {(duplicateGroupingMutation, { loading, data }) => {\n                if (loading) { return <li>Duplicating...</li> }\n                return (\n                  <li onClick={duplicateGroupingMutation}>Duplicate</li>\n                )\n              }}\n            </Mutation>\n\n            <li onClick={showDelModal}>Delete</li>\n\n          </ul>\n        </div>}\n      </div> : <div className=\"edit-buttons\">\n          <Button onClick={cancelEdit} buttonType=\"muted half-container-width-mobile\">CANCEL</Button>\n\n          <Mutation mutation={UPDATE_GROUPING_MUTATION} variables={{ title: updatedHeaderTitle, chips: chips, id: groupingID }} onCompleted={() => { setGroupingUpdated(true) }}>\n            {(updateGroupingMutation, { loading, data }) => {\n              if (loading) { return <Button buttonType=\"right half-container-width-mobile\">UPDATING...</Button> }\n              return (\n                <Button onClick={updateGroupingMutation} buttonType=\"right half-container-width-mobile\">SAVE</Button>\n              )\n            }}\n          </Mutation>\n\n        </div>}\n    </div>\n  )\n}\n\nexport default Menu\n","import React, { useState } from 'react'\n\n// Styles Imports\nimport './grouping-header.scss'\n\n// Component Imports\nimport DateRange from '../DateRange/DateRange'\nimport Menu from '../Menu/Menu'\n\nconst GroupingHeader = props => {\n  const [title, setTitle] = useState(props.title)\n\n  const handleChange = event => {\n    setTitle(event.target.value)\n  }\n\n  const saveEditRecievesTitle = () => {\n    props.saveEdit({ title })\n  }\n\n  const {\n    editing,\n    weekDaysInit,\n    dateRangeText,\n    weekYear,\n    dropdown,\n    duration,\n    durationVal,\n    setDurationVal,\n    setStartEndDates,\n    startDate,\n    endDate,\n    selectedDays,\n    location,\n    params,\n    grouping,\n    editClick,\n    toggleEditMode,\n    saveEdit,\n    toggleModal,\n    duplicateGrouping,\n    closeMenu,\n    showMenu,\n    toggleShowMenu,\n    formattedGroupingData,\n    showDelModal,\n    showDupModal,\n    showDupModalFunc,\n    groupingID,\n    chips,\n    groupingUpdated,\n    dateChanged\n  } = props\n  return (\n    <div className={`grouping-header ${editing ? 'editing' : ''}`}>\n      {!editing ? <div className=\"header\">\n        {title}\n      </div> : <div className=\"header-input\">\n          <input id=\"input\" type=\"text\" value={title} onChange={handleChange} />\n        </div>}\n\n      {weekDaysInit != null && <DateRange\n        text={params ? params.formattedDateString : grouping.subtitle}\n        weekYear={weekYear}\n        dropdown={dropdown}\n        duration={duration}\n        durationVal={durationVal}\n        setDurationVal={setDurationVal}\n        setStartEndDates={setStartEndDates}\n        startDate={startDate}\n        endDate={endDate}\n        selectedDays={weekDaysInit}\n        location={location}\n        params={params}\n        dateChanged={dateChanged}\n      />}\n\n      {location !== '/list' &&\n        <Menu\n          editing={editing}\n          editClick={editClick}\n          toggleEditMode={toggleEditMode}\n          saveEditRecievesTitle={saveEditRecievesTitle}\n          toggleModal={toggleModal}\n          closeMenu={closeMenu}\n          showMenu={showMenu}\n          toggleShowMenu={toggleShowMenu}\n          duplicateGrouping={duplicateGrouping}\n          grouping={grouping}\n          formattedGroupingData={formattedGroupingData}\n          showDelModal={showDelModal}\n          showDupModal={showDupModal}\n          showDupModalFunc={showDupModalFunc}\n          groupingUpdated={groupingUpdated}\n          groupingID={groupingID}\n          updatedHeaderTitle={title}\n          chips={chips}\n        />\n      }\n\n    </div>\n  )\n}\n\nexport default GroupingHeader\n","import React, { useState, useEffect } from 'react'\nimport { Mutation } from 'react-apollo'\n\n// Styles Imports\nimport './modal.scss'\n\n// Component Imports\nimport Button from '../Button/Button'\n\n// Mutation Imports\nimport { DELETE_GROUPING_MUTATION } from '../../Grouping/GroupingMutations'\n\n// Ionicons\nimport IosTrashOutline from 'react-ionicons/lib/IosTrashOutline'\n\nconst Modal = props => {\n  const { closeModal, showDeldModal, confirm, onConfirm, confirmText, cancel, trashIcon, wideButtons, modalHeaderText, modalBodyText, cancelText, groupingID } = props\n  const [groupingDeleted, setGroupingDeleted] = useState(false)\n  const [showCannotDelModal, setShowCannotDelModal] = useState(false)\n\n  useEffect(() => {\n    if(groupingDeleted) {\n      closeModal()\n      showDeldModal()\n      setGroupingDeleted(false)\n    }\n  }, [groupingDeleted])\n\n  const renderModalConfirmButton = () => {\n    if (onConfirm === 'refresh') {\n      return <Button onClick={() => { window.location.reload() }} buttonType={`${wideButtons ? 'wideButtons' : ''}`}>{confirmText}</Button>\n    } else if (onConfirm === 'deleteGrouping') {\n      if (groupingID === \"cjyjtg8pp04h70b99atcze7wb\" || groupingID === \"cjyjtgrvz04jq0b9907or4xh8\" || groupingID === \"cjyjtgwrl04k70b99kq7xjn6t\" || groupingID === \"cjyjthhqg04nq0b99e5sfg5fc\") {\n        if (!showCannotDelModal) {\n          setShowCannotDelModal(true)\n          showCannotDelModal()\n          closeModal()\n        }\n        return <div></div>\n      }\n      return <Mutation mutation={DELETE_GROUPING_MUTATION} variables={{ id: groupingID }} onCompleted={() => { setGroupingDeleted(true) }}>\n        {(deleteGroupingMutation, { loading, data }) => {\n          if (loading) { return <Button buttonType={`${wideButtons ? 'wideButtons' : ''}`}>{props.loadingText}</Button> }\n          return (\n            <Button onClick={deleteGroupingMutation} buttonType={`${wideButtons ? 'wideButtons' : ''}`}>{confirmText}</Button>\n          )\n        }}\n      </Mutation>\n    } else {\n      return <div>{<Button onClick={closeModal} buttonType={`${wideButtons ? 'wideButtons' : ''}`}>{confirmText}</Button>}</div>\n    }\n  }\n\n  // Oopsies ma buttplug fell out\n\n  return (\n    <div className=\"modal\">\n      <section className=\"modal-main\">\n        {/* Header */}\n        <h1>{modalHeaderText}</h1>\n        {/* Icons */}\n        {trashIcon && <IosTrashOutline color=\"#68686E\" fontSize=\"50px\" />}\n        {/* Body Text */}\n        <p>{modalBodyText}</p>\n        {/* Buttons */}\n        <div className={`modal-buttons ${wideButtons ? 'wideButtons' : ''}`}>\n          {confirm && <div>{renderModalConfirmButton()}</div>}\n          {cancel && <Button onClick={closeModal} buttonType={`muted ${wideButtons ? 'wideButtons' : ''}`}>{cancelText}</Button>}\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default Modal\n","import React from 'react'\n\n// Styles Imports\nimport './editor.scss'\n\n// Component Imports\nimport Card from '../Utility/Card/Card'\nimport Button from '../Utility/Button/Button'\n\nconst Editor = props => {\n  const { addCard } = props\n  return (\n    <div className='editor'>\n      <Card>\n        <div className='editor-title'><h2>Grouping Editor</h2></div>\n        <div className='editor-body'>\n          <div className='buttons'>\n            <Button buttonType='wideButtons' onClick={addCard}>Add Card</Button>\n            <Button buttonType='wideButtons' onClick={() => { console.log('add page') }}>Add Page</Button>\n          </div>\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default Editor\n","export default function formatGroupingDataForDup(grouping) {\n    \n    // formate cards\n    let cards = []\n    for (let card of grouping.cards) {\n\n        card.layoutLG = {\n            x: card.layoutLG.x,\n            y: card.layoutLG.y,\n            w: card.layoutLG.w,\n            h: card.layoutLG.h\n        }\n\n        card.layoutMD = {\n            x: card.layoutMD.x,\n            y: card.layoutMD.y,\n            w: card.layoutMD.w,\n            h: card.layoutMD.h\n        }\n\n        card.layoutSM = {\n            x: card.layoutSM.x,\n            y: card.layoutSM.y,\n            w: card.layoutSM.w,\n            h: card.layoutSM.h\n        }\n\n        card.layoutXS = {\n            x: card.layoutXS.x,\n            y: card.layoutXS.y,\n            w: card.layoutXS.w,\n            h: card.layoutXS.h\n        }\n\n        cards.push({\n            title: card.title,\n            cardType: card.cardType,\n            layoutLG: card.layoutLG,\n            layoutMD: card.layoutMD,\n            layoutSM: card.layoutSM,\n            layoutXS: card.layoutXS,\n        })\n    }\n\n    return {\n        title: grouping.title,\n        subtitle: grouping.subtitle,\n        cards: cards,\n        chips: grouping.chips\n    }\n}","import gql from \"graphql-tag\"\n\n// const GET_FILTER_DATA = gql`\n//   query Filter($duration: String!, dateStart: String, dateEnd: String,) {\n//       filter {\n//         entities(where: {items_some: {triggerTime_gte:}})\n//       }\n//   }\n// `\n\nconst GET_FILTER_DATA = gql`\n  query Filter($startDate: String, $endDate: String, $levels: [Level!]!, $types: [ItemType!]!, $entities: [String!]!) {\n      filter(where: {startDate: $startDate, endDate: $endDate, levels: $levels, types: $types, entities: $entities}) {\n        entities\n      }\n  }\n`\n\nconst GET_ALERTS = gql`\n    query Alerts($name: String){\n        items(where: {\n        name_contains: $name\n        type: \"ALERT\"\n        }) {\n            name\n            level\n            trigger {\n                name\n            }\n        }\n    }\n`\n// const GET_ALERTS = gql`\n//     query Alerts($name: String, $skip: Int){\n//         alerts(where: {\n//         name_contains: $name\n//         }, first: 11, skip: $skip) {\n//             id\n//             name\n//             level\n//             trigger {\n//                 name\n//             }\n//         }\n//     }\n// `\n\nconst GET_ITEMS = gql`\n    query GetItems($skip: Int!, $first: Int!, $startDate: String!, $endDate: String!, $levels: [Level!]!, $types: [ItemType!]!, $entities: [String!]!, $orderBy: String!) {\n        getItems(where: {first: $first, skip: $skip, startDate: $startDate, endDate: $endDate, levels: $levels, types: $types, entities: $entities, orderBy: $orderBy}) {\n\n                type\n                triggerTime\n                name\n                message\n                level\n                source\n                trigger {\n                    name\n                }\n            }\n        }\n`\n\nconst GET_ITEM_COUNT = gql`\n    query GetItemCount($startDate: String!, $endDate: String!, $levels: [Level!]!, $types: [ItemType!]!, $entities: [String!]!) {\n        getItemCount(where: {startDate: $startDate, endDate: $endDate, levels: $levels, types: $types, entities: $entities})\n    }\n`\n\nconst GET_WEEKBAR_DATA = gql`\n    query WeekBar($weekYear: String!, $type: String!, $levels: [Level!]!, $entities: [String!]!) {\n        weekBar(where: { weekYear: $weekYear, type: $type, levels: $levels, entities: $entities }) {\n            items\n        }\n    }\n`\n// where: {\n//     alerts_every: {AND: [{name_in: $names}, {level_in: $levels}, {source_in: $sources}, {trigger_in: $entities}]}\n// },\n\n\n// , $names: [String!]!, $levels: [String!]!, $sources: [String!]!, $entities: [String!]!\nconst GET_ENTITY_LIST = gql`\n    query getEntities($skip: Int!, $first: Int!, $startDate: String, $endDate: String, $levels: [Level!]!, $types: [ItemType!]!, $entities: [String!]!) {\n        getEntities(where: {first: $first, skip: $skip, startDate: $startDate, endDate: $endDate, levels: $levels, types: $types, entities: $entities}) {\n                name\n                count\n            }\n        }\n`\n\nconst GET_ENTITY_COUNT = gql`\n    query getEntityCount($startDate: String!, $endDate: String!, $levels: [Level!]!, $types: [ItemType!]!, $entities: [String!]!) {\n        getEntityCount(where: {startDate: $startDate, endDate: $endDate, levels: $levels, types: $types, entities: $entities}) \n    }\n`\n\nconst GET_WEEK_DENSITY_DATA = gql`\nquery WeekDensity($weekYear: String!, $levels: [Level!]!, $types: [ItemType!]!, $entities: [String!]!) {\n    weekDensity(where: { weekYear: $weekYear, levels: $levels, types: $types, entities: $entities }) {\n       itemDensity\n       max\n    }\n}\n`\n\nconst GET_MONTHBAR_DATA = gql`\nquery MonthBar($monthYear: String!, $levels: [Level!]!, $types: [ItemType!]!, $entities: [String!]!) {\n    monthBar(where: { monthYear: $monthYear, levels: $levels, types: $types, entities: $entities }) {\n        xAxis\n        series {\n            alerts\n            traps\n            syslogs\n            winEvents\n            vmwEvents\n        }\n    }\n}\n`\nconst GET_WEEKSEVERITY_DATA = gql`\nquery WeekSeverity($weekYear: String!, $levels: [Level!]!, $types: [ItemType!]!, $entities: [String!]!) {\n    weekSeverity(where: { weekYear: $weekYear, levels: $levels, types: $types, entities: $entities }) {\n        series {\n            critical\n            informational\n            notice\n            serious\n            warning\n            emergency\n            alert\n            error\n            unknown\n            \n            \n        }\n    }\n}\n`\n\n\nexport {\n    GET_FILTER_DATA,\n    GET_ALERTS,\n    GET_WEEKBAR_DATA,\n    GET_ENTITY_LIST,\n    GET_WEEK_DENSITY_DATA,\n    GET_MONTHBAR_DATA,\n    GET_WEEKSEVERITY_DATA,\n    GET_ITEMS,\n    GET_ITEM_COUNT,\n    GET_ENTITY_COUNT\n}","import React, { useState, useEffect } from 'react'\nimport './grouping.scss'\n\n// Component Imports\nimport Grid from '../Grid/Grid'\nimport Card from '../Utility/Card/Card'\nimport Filter from '../../components/Filter/Filter'\nimport WeekBar from '../../components/Charting/WeekBar/WeekBar'\nimport MonthBar from '../../components/Charting/MonthBar/MonthBar'\nimport WeekDensity from '../../components/Charting/WeekDensity/WeekDensity'\nimport StackedBar from '../../components/Charting/StackedBar/StackedBar'\nimport EventByTriggerObject from '../../components/EventByTriggerObject/EventByTriggerObject'\nimport Pagination from '../../components/Utility/Pagination/Pagination'\nimport EventList from '../EventList/EventList'\nimport GroupingHeader from '../Utility/GroupingHeader/GroupingHeader'\nimport Modal from '../Utility/Modal/Modal'\nimport Editor from '../Editor/Editor'\n\n// Helper Funcs\nimport formatGroupingDataForDup from '../../helperFuncs/formatGroupingDataForDup'\n\n// Query Imports\nimport {\n  GET_FILTER_DATA,\n  GET_ITEMS,\n  GET_WEEKBAR_DATA,\n  GET_ENTITY_LIST,\n  GET_WEEK_DENSITY_DATA,\n  GET_MONTHBAR_DATA,\n  GET_WEEKSEVERITY_DATA,\n  GET_ITEM_COUNT,\n  GET_ENTITY_COUNT\n} from './GroupingQueries'\n\n// import { callbackify } from 'util'\n\n// GraphQL\nimport { Query } from 'react-apollo'\n\n// Moment\nimport moment from 'moment'\nimport Loader from '../Utility/Loader/Loader'\nimport { setWeek } from 'date-fns'\n\nconst levelSuggestions = ['Critical',\n  'Informational',\n  'Notice',\n  'Warning',\n  'Alert',\n  'Error',\n  'Emergency']\nconst sourceSuggestions = ['Orion', 'Splunk']\nconst typeSuggestions = ['Alerts', 'Traps', 'Syslogs', 'Windows Events', 'VMware Events']\n\nconst yellow = '#F3B817'\nconst blue = '#00B1EA'\nconst purple = '#6F2AD2'\nconst orange = '#EA7317'\nconst cream = '#ECEBF3'\nconst grey = '#8293A0'\n\nconst Grouping = props => {\n  const { location, params, grouping, history, empty, updateEvents } = props\n  const [editing, setEditing] = useState(false)\n  const [toggleModal, setToggleModal] = useState(false)\n  const [showDupModal, setShowDupModal] = useState(false)\n  const [showDelModal, setShowDelModal] = useState(false)\n  const [showDeldModal, setShowDeldModal] = useState(false)\n  const [showCannotDelModal, setShowCannotDelModal] = useState(false)\n  const [showMenu, setShowMenu] = useState(false)\n  const [groupingData, setGroupingData] = useState(props.groupingData)\n  const [formattedGroupingData, setFormattedGroupingData] = useState(null)\n  const [name, setName] = useState('Webinar')\n  const [page, setPage] = useState(0)\n  const [types, setTypes] = useState([])\n  const [levels, setLevels] = useState([])\n  const [triggers, setTriggers] = useState([])\n  const [names, setNames] = useState([])\n  const [sources, setSources] = useState([])\n  const [entitySuggestions, setEntitiySuggestions] = useState([])\n  const [chips, setChips] = useState(props.grouping.chips)\n  const [initChips, setInitChips] = useState(false)\n  const [dateRange, setDateRange] = useState(null)\n  const [rangeType, setRangeType] = useState(null)\n  const [duration, setDuration] = useState(null)\n  const [monthYear, setMonthYear] = useState(null)\n  const [weekYear, setWeekYear] = useState(null)\n  const [weekDaysInit, setWeekDaysInit] = useState(null)\n  const [startDate, setStartDate] = useState(null)\n  const [endDate, setEndDate] = useState(null)\n  const [orderBy, setOrderBy] = useState('name_ASC')\n  const [count, setCount] = useState(11)\n  const [title, setTitle] = useState(null)\n  const [formattedDateString, setFormattedDateString] = useState(null)\n  const [titleMargin, setTitleMargin] = useState(false)\n  const [filterWidth, setFilterWidth] = useState(null)\n  const [groupingMax, setGroupingMax] = useState(null)\n  const [groupingMaxs, setGroupingMaxs] = useState([])\n  const [dateChanged, setDateChanged] = useState(false)\n  const [groupingLayout, setGroupingLayout] = useState(null)\n  const [newGridElements, setNewGridElements] = useState([])\n\n\n  const calcGroupingMaxFunc = max => {\n    // console.log('groupingMaxs:', groupingMaxs)\n    if (groupingMaxs.some(item => max === item) || max === 0) {\n      // console.log('some')\n      return\n    } else {\n      if (max < 0) {\n        // console.log('clearing groupingMaxs array...')\n        setGroupingMaxs([])\n        // this.setState({\n        //   groupingMaxs: []\n        // }, () => {\n        //   console.log('should be empty array', this.state.groupingMaxs)\n        //   this.setState({ groupingMaxs: [max] })\n        //   let groupingMax = max + 50\n        //   if (groupingMax < 50) { groupingMax += 50 } else\n        //     if (groupingMax > 50 && groupingMax < 500) { groupingMax += 100 } else\n        //       if (groupingMax > 500 && groupingMax < 2000) { groupingMax += 300 } else\n        //         if (groupingMax > 2000) { groupingMax += 500 }\n        //   let roundedMax = Math.ceil(groupingMax / 7.0) * 7\n        //   this.setState({ groupingMax: roundedMax, dateChanged: false })\n        // })\n      } else {\n        // console.log({\n        // 'groupingMaxs': groupingMaxs,\n        // 'max': max\n        // })\n        setGroupingMaxs([...groupingMaxs, max])\n        // setGroupingMaxs([...groupingMaxs, max], () => {\n        let groupingMax = Math.max(...groupingMaxs)\n        // if (groupingMax < 50) { groupingMax += 50 } else\n        //   if (groupingMax > 50 && groupingMax < 500) { groupingMax += 100 } else\n        //     if (groupingMax > 500 && groupingMax < 2000) { groupingMax += 300 } else\n        //       if (groupingMax > 2000) { groupingMax += 500 }\n        let roundedMax = Math.ceil(groupingMax / 7.0) * 7\n        // console.log('roundedMax:', roundedMax)\n        setGroupingMax(roundedMax)\n        // })\n      }\n    }\n  }\n\n  const dateChangedFunc = () => {\n    // setGroupingMaxs([])\n  }\n\n  // Set Start/End Dates For Queries\n  const setStartEndDatesFunc = (startDate, endDate) => {\n    // calcGroupingMaxFunc(-1)\n    // dateChangedFunc()\n    setStartDate(startDate)\n    setEndDate(endDate)\n  }\n\n  // Close Menu (For Click Off Menu)\n  const closeMenuFunc = () => {\n    setShowMenu(false)\n  }\n\n  // Component Did Mount\n  useEffect(() => {\n    // Initialize Week Picker\n    var dates = [];\n    for (var i = 0; i < 7; i++) {\n      let date = new Date();\n      let day = moment(date).day(i)._d\n      dates.push(day);\n    }\n    setWeekDaysInit(dates)\n    // Reset Duration On /list\n    if (location === '/list') {\n      setStartEndDatesFunc(params.startDateMoment, params.endDateMoment)\n      setDuration(null)\n    }\n  }, [])\n\n  const getTypeFromChip = (chip) => {\n    switch (chip) {\n\n      case 'Alerts':\n        return 'ALERT'\n\n      case 'Traps':\n        return 'TRAP'\n\n      case 'Syslogs':\n        return 'SYSLOG'\n\n      case 'winEvents':\n        return 'WINDOWSEVENT'\n\n      case 'vmwEvents':\n        return 'VMWAREEVENT'\n\n    }\n  }\n\n  useEffect(() => {\n    // Get Formatted Grouping Data\n    if (showMenu) {\n      let formattedGroupingData = formatGroupingDataForDup(grouping)\n      setFormattedGroupingData(formattedGroupingData)\n    }\n    // Initialize /list State\n    if (location === '/list' && title === null) {\n      const { title, types, levels, triggers, sources, formattedDateString, duration, startDateMoment, endDateMoment } = params\n      return {\n        title,\n        types,\n        levels,\n        triggers,\n        sources,\n        formattedDateString,\n        duration,\n        startDate: startDateMoment,\n        endDate: endDateMoment\n        // dateRange,\n        // rangeType,\n      }\n    } else if (grouping !== undefined && location !== '/list') {\n      // Initialize Month/Week State\n      let today = new Date()\n      let month = moment(today).month()\n      let week = moment(today).week()\n      let year = moment(today).year()\n      let monthYearInit = `m${month}y${year}`\n      let weekYearInit = `w${week}y${year}`\n      // let grouping = grouping\n      // let chips = props.grouping.chips // Init Chips (temp fix)\n      // let initChips = state.initChips // Init Chips (temp fix)\n      if (monthYear != null) { return }\n      if (weekYear != null) { return }\n      if (grouping.title === 'LOGS & EVENTS' && grouping.subtitle === 'past 30 days') {\n        // if (!initChips) {\n        //   return { duration: 'm', monthYear, chips, initChips: true } // Init Chips (temp fix)\n        // }\n        setDuration('m')\n        setMonthYear(monthYearInit)\n      } else {\n        // if (!initChips) {\n        // setDuration('w')\n        // setWeekYear(weekYearInit)\n        // setChips(chips)\n        // setInitChips(true) // Init Chips (temp fix)\n        // }\n        setDuration('w')\n        setWeekYear(weekYearInit)\n        setMonthYear(monthYearInit) // monthYear temporary, until queries can accept hourDayWeekYear\n      }\n    }\n    // Close Menu If toggleModal: true\n    if (toggleModal) {\n      closeMenuFunc()\n    }\n  })\n\n  // On Chart Click\n  const onChartClickFunc = x => {\n    // Push Chip Of Selected Bar/Bar Section\n    let selectedChip = x.selectedChip\n    let allChips = [...chips]\n    let allLevels = levels\n    let allTypes = types\n\n    if (selectedChip && !chips.includes(selectedChip)) {\n      allChips.push(selectedChip)\n      if (x.chipType === 'level') {\n        allLevels = [...levels, selectedChip.toUpperCase()]\n      } else {\n        allTypes = [...types, getTypeFromChip(selectedChip)]\n      }\n    }\n\n    history.push(\"/list\", {\n      title: grouping.title,\n      chips: allChips,\n      types: allTypes,\n      levels: allLevels,\n      triggers: triggers,\n      sources: sources,\n      formattedDateString: x.formattedDateString,\n      startDateMoment: x.startDateMoment,\n      endDateMoment: x.endDateMoment,\n      duration: null\n      // dateRange: x.dateRange,\n      // rangeType: x.rangeType\n    })\n  }\n\n\n  // On Trigger Click\n  const onTriggerClickFunc = x => {\n    history.push(\"/list\", {\n      title: x.name, // Coming From EventByTriggerObject\n      chips: [...chips, x.name],\n      types: types,\n      levels: levels,\n      triggers: [...triggers, x.name], // Doesn't enter allChips\n      sources: sources,\n      formattedDateString: null,\n      startDateMoment: startDate,\n      endDateMoment: endDate,\n      duration: duration\n      // dateRange: x.dateRange, \n      // rangeType: x.rangeType\n    })\n  }\n\n  const setTitleMarginFunc = width => {\n    // console.log(width)\n    setTitleMargin(!titleMargin)\n    setFilterWidth(width)\n  }\n\n  // Set Entity Suggestions On /list\n  const setEntitiySuggestionsFunc = entitySuggestions => {\n    setEntitiySuggestions(entitySuggestions)\n  }\n\n  // Set DurationVal In State For Queries\n  const setDurationValFunc = (weekYear, monthYear, duration) => { // Temporary, until queries can accept hourDayWeekYear\n    if (duration === 'm') {\n      setMonthYear(monthYear)\n    }\n    if (duration === 'w') {\n      setWeekYear(weekYear)\n      setMonthYear(monthYear)\n    }\n  }\n  // const setDurationValFunc = (DV, duration) => {\n  //   if (duration === 'm') {\n  //     setMonthYear(DV)\n  //   }\n  //   if (duration === 'w') {\n  //     setWeekYear(DV)\n  //   }\n  // }\n\n  // Handle Page Click\n  const handlePageClickFunc = data => {\n    let page = data.selected\n    setPage(page)\n  }\n\n  // Handle Grid Edit Click\n  const handleEditClickFunc = () => {\n    setEditing(!editing)\n    // resetChips()\n  }\n\n  // Show Cannot Delete Modal\n  const showCannotDelModalFunc = () => {\n    if (!showCannotDelModal) {\n      setShowCannotDelModal(true)\n    }\n  }\n\n  // Close Cannot Delete Modal\n  const closeCannotDelModalFunc = () => {\n    setShowCannotDelModal(false)\n  }\n\n  // Show Delete Grouping Modal\n  const showDelModalFunc = () => {\n    setShowMenu(false)\n    setShowDelModal(true)\n  }\n\n  // Close Delete Grouping Modal\n  const closeDelModalFunc = () => {\n    setShowDelModal(false)\n  }\n\n  // Show Grouping Deleted Modal\n  const showDeldModalFunc = () => {\n    setShowDeldModal(true)\n  }\n\n  // Close Grouping Deleted Modal\n  const closeDeldModalFunc = () => {\n    setShowDeldModal(false)\n  }\n\n  // Show Duplicate Grouping Modal\n  const showDupModalFunc = () => {\n    setShowMenu(false)\n    setShowDupModal(true)\n  }\n\n  // Close Duplicate Grouping Modal\n  const closeDupModalFunc = () => {\n    setShowDupModal(false)\n  }\n\n  // Toggle Show Menu On Icon Click\n  const toggleShowMenuFunc = () => {\n    setShowMenu(!showMenu)\n  }\n\n  // On Save Edit Click \n  const saveEditFunc = fromGroupingHeader => {\n    let header = fromGroupingHeader.title\n  }\n\n  // Duplicate Grouping\n  const duplicateGroupingFunc = () => {\n    let formattedGroupingData = formatGroupingDataForDup(grouping)\n  }\n\n  // On Grouping Update\n  const groupingUpdatedFunc = () => {\n    setEditing(false)\n    setShowMenu(false)\n  }\n\n  // Enable Edit Mode\n  const toggleEditModeFunc = () => {\n    setEditing(!editing)\n  }\n\n  // Set OrderBy For EventList Query\n  const setOrderByFunc = orderBy => {\n    setOrderBy(orderBy)\n  }\n\n  // Set Filter Chips For Queries\n  const setChipsFunc = (types, levels, triggers, sources, chips) => {\n    setTypes(types)\n    setLevels(levels)\n    setTriggers(triggers)\n    setSources(sources)\n    setChips(chips)\n  }\n\n  const isLevel = value => {\n    return (levelSuggestions.indexOf(value) > -1)\n  }\n\n  const isType = value => {\n    return (typeSuggestions.indexOf(value) > -1)\n  }\n\n  const isSource = value => {\n    return (sourceSuggestions.indexOf(value) > -1)\n  }\n\n  const updateChipsFunc = chips => {\n    let unformattedTypes = []\n    let levels = []\n    let triggers = []\n    // let names = []\n    let sources = []\n\n    // Restarts Function If Data Is Not Present\n    if (empty) { setChips(chips) }\n\n    chips.forEach(chip => {\n      if (isType(chip)) {\n        unformattedTypes.push(chip)\n      } else if (isLevel(chip)) {\n        levels.push(chip.toUpperCase())\n      } else if (isSource(chip)) {\n        sources.push(chip.toUpperCase())\n      } else {\n        triggers.push(chip)\n      }\n    })\n\n    let types = []\n    unformattedTypes.forEach(type => {\n      type = type.replace(/\\s/g, '')\n      type = type.toUpperCase()\n      type = type.slice(0, -1);\n      types.push(type)\n    })\n\n    // Check Element Height\n    // let height = this.divElement.clientHeight;\n    // let width = this.divElement.clientWidth;\n    // if (height > this.state.initialHeight && this.state.initialHeight !== null) {\n    //   // console.log('onchange')\n\n    //   props.setTitleMargin(width)\n    // }\n\n    // console.log('onChange chips', {\n    //   'chips': chips,\n    //   'types': types,\n    //   'levels': levels,\n    //   'triggers': triggers,\n    //   'sources': sources\n    // })\n    // props.setChips(types, levels, triggers, sources, chips)\n    setChips(chips)\n    setTypes(types)\n    setLevels(levels)\n    setSources(sources)\n    setTriggers(triggers)\n  }\n\n  // Set Grouping Layout To State On Mount\n  const setGroupingLayoutToState = (x) => {\n    setGroupingLayout(x)\n  }\n\n  // Add Card\n  const addCard = () => {\n    console.log('hit addCard')\n    if (groupingLayout) {\n      // Create ID\n      let randID = Math.random().toString(36).replace('0.', '')\n\n      // Set x Value\n      let groupingWidths = []\n      groupingLayout.forEach((layout) => {\n        if (layout.h === 1) {\n          return\n        } else {\n          let elementWidth = layout.w\n          groupingWidths.push(elementWidth)\n        }\n      })\n\n      // Get Sum of Widths\n      let groupingWidth = groupingWidths.reduce((a, b) => a + b, 0)\n      let xVal = groupingWidth + 1\n\n      // Increment newGridElements\n      setNewGridElements([...newGridElements, randID])\n      setGroupingLayout([...groupingLayout, {\n        w: 2,\n        h: 2,\n        x: xVal,\n        y: 0,\n        i: randID\n      }])\n    } else console.log('error. no grouping layout set')\n  }\n\n  return (\n    <div className='grouping'>\n      {/* <div className='h-container'> */}\n      {showDelModal &&\n        <Modal\n          showModal={showDelModalFunc}\n          closeModal={closeDelModalFunc}\n          showCannotDelModal={showCannotDelModalFunc}\n          showDeldModal={showDeldModalFunc}\n          groupingID={grouping.id}\n          modalHeaderText=\"Delete Grouping\"\n          modalBodyText=\"Are you sure?\"\n          loadingText=\"DELETING...\"\n          confirm\n          onConfirm=\"deleteGrouping\"\n          trashIcon\n          cancel\n          wideButtons\n          confirmText=\"CONFIRM\"\n          cancelText=\"CANCEL\"\n        />}\n\n      {showDupModal &&\n        <Modal\n          showModal={showDupModalFunc}\n          closeModal={closeDupModalFunc}\n          modalHeaderText=\"Grouping Duplicated\"\n          modalBodyText=\"Refresh the page to see changes. New groupings will appear at the bottom of the page.\"\n          cancel\n          confirm\n          onConfirm=\"refresh\"\n          confirmText=\"REFRESH\"\n          wideButtons\n          cancelText=\"CLOSE\"\n        />}\n\n      {showDeldModal &&\n        <Modal\n          showDeldModal={showDeldModalFunc}\n          closeModal={closeDeldModalFunc}\n          modalHeaderText=\"Grouping Deleted\"\n          modalBodyText=\"Refresh the page to see changes.\"\n          cancel\n          confirm\n          onConfirm=\"refresh\"\n          confirmText=\"REFRESH\"\n          wideButtons\n          cancelText=\"CLOSE\"\n        />}\n\n      {showCannotDelModal &&\n        <Modal\n          showCannotDelModal={showCannotDelModalFunc}\n          closeModal={closeCannotDelModalFunc}\n          modalHeaderText=\"Error\"\n          modalBodyText=\"Original groupings cannot be deleted.\"\n          confirm\n          confirmText=\"CLOSE\"\n          wideButtons\n        />}\n\n\n      <GroupingHeader\n        // Header Props\n        classname=\"heading\"\n        title={params ? params.title : grouping.title}\n        editing={editing}\n\n        // DateRange Props\n        weekDaysInit={weekDaysInit}\n        weekYear={weekYear}\n        // dropdown={this.dropdown}\n        duration={duration}\n        // durationVal={durationVal}\n        setDurationVal={setDurationValFunc}\n        setStartEndDates={setStartEndDatesFunc}\n        startDate={startDate}\n        endDate={endDate}\n        selectedDays={weekDaysInit}\n        location={location}\n        params={params}\n        grouping={grouping}\n        dateChanged={dateChangedFunc}\n\n        // Menu Props\n        chips={chips}\n        editClick={handleEditClickFunc}\n        toggleEditMode={toggleEditModeFunc}\n        saveEdit={saveEditFunc}\n        // toggleModal={this.toggleModal}\n        duplicateGrouping={duplicateGroupingFunc}\n        closeMenu={closeMenuFunc}\n        showMenu={showMenu}\n        toggleShowMenu={toggleShowMenuFunc}\n        formattedGroupingData={formattedGroupingData}\n        showDelModal={showDelModalFunc}\n        showDupModal={showDupModal}\n        showDupModalFunc={showDupModalFunc}\n        closeModal={closeDupModalFunc}\n        groupingID={grouping.id}\n        groupingUpdated={groupingUpdatedFunc}\n      />\n\n\n\n      {/* Lock Grouping Component */}\n      {/* <Lock showLockModal={this.state.showLockModal} onGroupingLock={this.onGroupingLock} onToggleLockModal={this.onToggleLockModal} /> */}\n\n\n      {/* Body */}\n      <div className='grouping-body'>\n        {/* Grouping Editor */}\n        {editing && <Editor addCard={addCard} />}\n        <Grid editing={false} grouping={grouping} setGroupingLayoutToState={setGroupingLayoutToState} layout={groupingLayout}>\n          {grouping.cards.map((card, index, array) => (\n            <div key={card.id} style={{ zIndex: card.cardType === 'FILTER' ? 999 : 998 }}>\n\n\n              {card.cardType === 'FILTER' && <Query query={GET_FILTER_DATA} variables={{ startDate: startDate, endDate: endDate, levels: levels, types: types, entities: triggers }}>\n                {({ data, loading, error }) => {\n                  // if (loading) return <div></div>;\n                  // if (error) return `Error! ${error.message}`;\n                  return (\n                    <Card title={card.title} loading={false} style={{ overflow: card.cardType === 'FILTER' ? 'hidden' : 'visible' }}>\n                      <Filter\n                        empty={loading}\n                        setChips={setChipsFunc}\n                        chips={chips}\n                        updateChips={updateChipsFunc}\n                        triggers={triggers}\n                        levels={levels}\n                        types={types}\n                        sources={sources}\n                        startDate={startDate}\n                        endDate={endDate}\n                        setTitleMargin={setTitleMarginFunc}\n                        titleMargin={titleMargin}\n                        setEntitiySuggestions={setEntitiySuggestionsFunc}\n                        entitySuggestions={entitySuggestions}\n                        updateEvents={updateEvents}\n                        data={data}\n                        params={params}\n                        location={location}\n                      />\n                    </Card>\n                  )\n                }}\n              </Query>}\n\n\n\n\n              {/* , names: this.state.names, levels: this.state.levels, sources: this.state.sources, entities: this.state.entities */}\n              {card.cardType === 'TRIGGERLIST' && startDate && endDate && <Card title={card.title} style={{ overflow: card.cardType === 'FILTER' ? 'hidden' : 'visible' }}>\n                <Query query={GET_ENTITY_LIST} variables={{ skip: page, first: 11, startDate: startDate, endDate: endDate, levels: levels, types: types, entities: triggers }}>\n                  {({ data, loading, error }) => {\n                    if (loading) return <Loader></Loader>\n                    return (\n                      <EventByTriggerObject\n                        empty={loading}\n                        error={error}\n                        data={data}\n                        count={11}\n                        onTriggerClick={onTriggerClickFunc}\n                      // triggerObjectType={store.monthByTriggerObject}\n                      // handleTriggerClick={onTriggerClickMonth}\n                      />\n                    )\n                  }}\n                </Query>\n                <Query query={GET_ENTITY_COUNT} variables={{ startDate: startDate, endDate: endDate, levels: levels, types: types, entities: triggers }}>\n                  {({ data, loading, error }) => {\n                    if (loading) return <div style={{ height: 18 }}></div>\n                    if (error) return `Error! ${error.message}`\n                    return (\n                      <Pagination\n                        pageCount={data.getEntityCount / 11}\n                        handlePageClick={handlePageClickFunc}\n                      />\n                    )\n                  }}\n                </Query>\n              </Card>}\n\n\n\n\n              {card.cardType === 'WEEKBAR' && <Query query={GET_WEEKBAR_DATA} variables={{ weekYear: weekYear, type: card.title, levels: levels, entities: triggers }}>\n                {({ data, loading, error }) => {\n                  return (\n                    <Card title={card.title} loading={loading} style={{ overflow: card.cardType === 'FILTER' ? 'hidden' : 'visible' }}>\n                      <WeekBar\n                        empty={loading}\n                        error={error}\n                        data={data}\n                        type={card.title}\n                        index={index}\n                        color={index === 1 ? yellow : index === 2 ? blue : index === 3 ? purple : purple}\n                        onChartClick={onChartClickFunc}\n                        monthYear={monthYear}\n                        startDate={startDate}\n                        // returnWeekBarMax={this.returnWeekBarMax}\n                        calcGroupingMax={calcGroupingMaxFunc}\n                        groupingMax={groupingMax}\n                      />\n                    </Card>\n                  )\n                }}\n              </Query>}\n\n\n\n\n              {card.cardType === 'MONTHBAR' && <Query query={GET_MONTHBAR_DATA} variables={{ monthYear: monthYear, levels: levels, types: types, entities: triggers }}>\n                {({ data, loading, error }) => {\n                  return (\n                    <Card title={card.title} loading={loading} style={{ overflow: card.cardType === 'FILTER' ? 'hidden' : 'visible' }}>\n                      <MonthBar\n                        empty={loading}\n                        error={error}\n                        month={data.monthBar}\n                        onChartClick={onChartClickFunc}\n                        monthYear={monthYear}\n                        startDate={startDate}\n                        yellow={yellow}\n                        blue={blue}\n                        purple={purple}\n                        cream={cream}\n                        grey={grey}\n                        groupingMax={groupingMax}\n                      />\n                    </Card>\n                  )\n                }}\n              </Query>}\n\n\n\n\n              {card.cardType === 'WEEKDENSITY' && <Query query={GET_WEEK_DENSITY_DATA} variables={{ weekYear: weekYear, levels: levels, types: types, entities: triggers }}>\n                {({ data, loading, error }) => {\n                  return (\n                    <Card title={card.title} loading={loading} style={{ overflow: card.cardType === 'FILTER' ? 'hidden' : 'visible' }}>\n                      <WeekDensity\n                        empty={loading}\n                        error={error}\n                        week={data.weekDensity}\n                        onChartClick={onChartClickFunc}\n                        monthYear={monthYear}\n                        startDate={startDate}\n                      />\n                    </Card>\n                  )\n                }}\n              </Query>}\n\n\n\n\n              {card.cardType === 'STACKEDSEVERITY' && <Query query={GET_WEEKSEVERITY_DATA} variables={{ weekYear: weekYear, levels: levels, types: types, entities: triggers }}>\n                {({ data, loading, error }) => {\n                  return (\n                    <Card title={card.title} loading={loading} style={{ overflow: card.cardType === 'FILTER' ? 'hidden' : 'visible' }}>\n                      <StackedBar\n                        empty={loading}\n                        error={error}\n                        weekSeverity={data}\n                        onChartClick={onChartClickFunc}\n                        monthYear={monthYear}\n                        startDate={startDate}\n                        groupingMax={groupingMax}\n                      />\n                    </Card>\n                  )\n                }}\n              </Query>}\n\n\n              {/* {newGridElements.length ? <div>{newGridElements.map(el => {\n                console.log('bitch', el)\n                return <Card key={el}>\n                  New Grid Element!\n                </Card>\n              })}</div> : <div />} */}\n\n\n            </div>\n          ))}\n        </Grid>\n      </div>\n\n      {location === \"/list\" && startDate && endDate && <Card listView={true}>\n        <Query query={GET_ITEMS} variables={{ startDate: startDate, endDate: endDate, levels: levels, types: types, entities: triggers, first: count, skip: count * page, orderBy: orderBy }}>\n          {({ data, loading, error }) => {\n            if (loading) return <div style={{ height: 597 }}><Loader></Loader></div>\n            if (error) return `Error! ${error.message}`\n            return (\n              <EventList\n                items={data.getItems}\n                setOrderBy={setOrderByFunc}\n              />\n              // <div>{React.cloneElement(props.children, { name: this.state.name, alerts={data} })}</div>\n            )\n          }}\n        </Query>\n        <Query query={GET_ITEM_COUNT} variables={{ startDate: startDate, endDate: endDate, levels: levels, types: types, entities: triggers }}>\n          {({ data, loading, error }) => {\n            if (loading) return <div style={{ height: 18 }}></div>\n            if (error) return `Error! ${error.message}`\n            return (\n              <Pagination\n                listView={true}\n                pageCount={data.getItemCount / 11}\n                handlePageClick={handlePageClickFunc}\n              />\n            )\n          }}\n        </Query>\n\n      </Card>}\n      {/* </div> */}\n    </div>\n  )\n}\n\nexport default Grouping","const LVGroupingData = {\n    cards: [{\n        cardType: \"FILTER\",\n        id: \"lvfilterid\",\n        title: null\n    }],\n    // {\n    //     cardType: \"EVENTLIST\",\n    //     id: \"lveventlistid\",\n    //     title: null\n    // },\n    layoutLGs: [\n        {\n            i: 'filter',\n            x: 0,\n            y: 0,\n            w: 24,\n            h: 1,\n            card: {\n                id: \"lvfilterid\"\n            }\n        }\n        // {\n        //     i: 'list',\n        //     x: 0,\n        //     y: 3,\n        //     w: 24,\n        //     h: 5,\n        //     card: {\n        //         id: \"lveventlistid\"\n        //     }\n        // },\n    ],\n    layoutMDs: [\n        {\n            i: 'filter',\n            x: 0,\n            y: 0,\n            w: 18,\n            h: 1,\n            card: {\n                id: \"lvfilterid\"\n            }\n        }\n        // {\n        //     i: 'list',\n        //     x: 0,\n        //     y: 3,\n        //     w: 18,\n        //     h: 5,\n        //     card: {\n        //         id: \"lveventlistid\"\n        //     }\n        // },\n    ],\n    layoutSMs: [\n        {\n            i: 'filter',\n            x: 0,\n            y: 0,\n            w: 12,\n            h: 1,\n            card: {\n                id: \"lvfilterid\"\n            }\n        }\n        // {\n        //     i: 'list',\n        //     x: 0,\n        //     y: 3,\n        //     w: 12,\n        //     h: 5,\n        //     card: {\n        //         id: \"lveventlistid\"\n        //     }\n        // },\n    ],\n    layoutXSs: [\n        {\n            i: 'filter',\n            x: 0,\n            y: 0,\n            w: 9,\n            h: 1,\n            card: {\n                id: \"lvfilterid\"\n            }\n        }\n        // {\n        //     i: 'list', x: 0,\n        //     y: 3,\n        //     w: 9,\n        //     h: 5,\n        //     card: {\n        //         id: \"lveventlistid\"\n        //     }\n        // },\n    ],\n    subtitle: \"subtitle\",\n    title: \"title\"\n}\n\nexport default LVGroupingData","import React, { useState, useEffect } from 'react'\n\n// Styles Imports\nimport './list-view.scss'\n\n// Component Imports\nimport Navbar from '../../components/Utility/Navbar/Navbar'\nimport Grouping from '../../components/Grouping/Grouping'\n\n// Layout\nimport LVGroupingData from './LVGroupingData'\n\nconst ListView = props => {\n  const { params } = props\n  const [events, setEvents] = useState([])\n  const [count, setCount] = useState(11)\n  const [page, setPage] = useState(0)\n\n  // Component Did Mount\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const handlePageClick = data => {\n    let page = data.selected * 15\n    setPage(page)\n  }\n\n  return (\n    <div className=\"list-view\" >\n      <Navbar />\n\n      <Grouping\n        grouping={LVGroupingData}\n        params={params}\n        count={count}\n        events={events}\n        {...props}\n      />\n    </div>\n  )\n}\n\nexport default ListView\n","import React from 'react'\nimport { Consumer } from '../../data/AppContext'\n\n// Styles Imports\nimport './list-page.scss'\n\n// Component Imports\nimport ListView from '../../components/ListView/ListView'\n\nconst ListPage = props => {\n  const { history, location } = props\n  return (\n    <Consumer>\n      {(context) => (\n        <ListView store={context.store} actions={context.actions} history={history} location={location.pathname} params={location.state} />\n      )}\n    </Consumer>\n  )\n}\n\nexport default ListPage\n\n","import React from 'react'\nimport './divider.scss'\n\nconst Divider = () => {\n    return (\n      <div className=\"divider\" />\n    )\n}\n\nexport default Divider\n","import React, { useState, useEffect } from 'react'\nimport './grouping.scss'\n\n// Component Imports\nimport Grid from '../Grid/Grid'\nimport Card from '../Utility/Card/Card'\nimport Filter from '../../components/Filter/Filter'\nimport WeekBar from '../../components/Charting/WeekBar/WeekBar'\nimport MonthBar from '../../components/Charting/MonthBar/MonthBar'\nimport WeekDensity from '../../components/Charting/WeekDensity/WeekDensity'\nimport StackedBar from '../../components/Charting/StackedBar/StackedBar'\nimport EventByTriggerObject from '../../components/EventByTriggerObject/EventByTriggerObject'\nimport Pagination from '../../components/Utility/Pagination/Pagination'\nimport EventList from '../EventList/EventList'\nimport GroupingHeader from '../Utility/GroupingHeader/GroupingHeader'\nimport Modal from '../Utility/Modal/Modal'\nimport Editor from '../Editor/Editor'\n\n// Helper Funcs\n// import formatGroupingDataForDup from '../../helperFuncs/formatGroupingDataForDup'\n\n// // Query Imports\n// import {\n//   GET_FILTER_DATA,\n//   GET_ITEMS,\n//   GET_WEEKBAR_DATA,\n//   GET_ENTITY_LIST,\n//   GET_WEEK_DENSITY_DATA,\n//   GET_MONTHBAR_DATA,\n//   GET_WEEKSEVERITY_DATA,\n//   GET_ITEM_COUNT,\n//   GET_ENTITY_COUNT\n// } from './GroupingQueries'\n\n// import { callbackify } from 'util'\n\n// GraphQL\n// import { Query } from 'react-apollo'\n\n// Moment\n// import moment from 'moment'\n// import Loader from '../Utility/Loader/Loader'\n// import { setWeek } from 'date-fns'\n\nconst levelSuggestions = ['Critical',\n  'Informational',\n  'Notice',\n  'Warning',\n  'Alert',\n  'Error',\n  'Emergency']\nconst sourceSuggestions = ['Orion', 'Splunk']\nconst typeSuggestions = ['Alerts', 'Traps', 'Syslogs', 'Windows Events', 'VMware Events']\n\nconst yellow = '#F3B817'\nconst blue = '#00B1EA'\nconst purple = '#6F2AD2'\nconst orange = '#EA7317'\nconst cream = '#ECEBF3'\nconst grey = '#8293A0'\n\nconst GroupingSandBox = props => {\n  const { location, params, grouping, history, empty, updateEvents } = props\n  const [editing, setEditing] = useState(true)\n  const [toggleModal, setToggleModal] = useState(false)\n  const [showDupModal, setShowDupModal] = useState(false)\n  const [showDelModal, setShowDelModal] = useState(false)\n  const [showDeldModal, setShowDeldModal] = useState(false)\n  const [showCannotDelModal, setShowCannotDelModal] = useState(false)\n  const [showMenu, setShowMenu] = useState(false)\n  const [groupingData, setGroupingData] = useState(props.groupingData)\n  const [formattedGroupingData, setFormattedGroupingData] = useState(null)\n  const [name, setName] = useState('Webinar')\n  const [page, setPage] = useState(0)\n  const [types, setTypes] = useState([])\n  const [levels, setLevels] = useState([])\n  const [triggers, setTriggers] = useState([])\n  const [names, setNames] = useState([])\n  const [sources, setSources] = useState([])\n  const [entitySuggestions, setEntitiySuggestions] = useState([])\n  // const [chips, setChips] = useState(props.grouping.chips)\n  const [initChips, setInitChips] = useState(false)\n  const [dateRange, setDateRange] = useState(null)\n  const [rangeType, setRangeType] = useState(null)\n  const [duration, setDuration] = useState(null)\n  const [monthYear, setMonthYear] = useState(null)\n  const [weekYear, setWeekYear] = useState(null)\n  const [weekDaysInit, setWeekDaysInit] = useState(null)\n  const [startDate, setStartDate] = useState(null)\n  const [endDate, setEndDate] = useState(null)\n  const [orderBy, setOrderBy] = useState('name_ASC')\n  const [count, setCount] = useState(11)\n  const [title, setTitle] = useState(null)\n  const [formattedDateString, setFormattedDateString] = useState(null)\n  const [titleMargin, setTitleMargin] = useState(false)\n  const [filterWidth, setFilterWidth] = useState(null)\n  const [groupingMax, setGroupingMax] = useState(null)\n  const [groupingMaxs, setGroupingMaxs] = useState([])\n  const [dateChanged, setDateChanged] = useState(false)\n  const [groupingLayout, setGroupingLayout] = useState(null)\n  const [newGridElements, setNewGridElements] = useState([])\n\n\n  // const calcGroupingMaxFunc = max => {\n  //   // console.log('groupingMaxs:', groupingMaxs)\n  //   if (groupingMaxs.some(item => max === item) || max === 0) {\n  //     // console.log('some')\n  //     return\n  //   } else {\n  //     if (max < 0) {\n  //       // console.log('clearing groupingMaxs array...')\n  //       setGroupingMaxs([])\n  //       // this.setState({\n  //       //   groupingMaxs: []\n  //       // }, () => {\n  //       //   console.log('should be empty array', this.state.groupingMaxs)\n  //       //   this.setState({ groupingMaxs: [max] })\n  //       //   let groupingMax = max + 50\n  //       //   if (groupingMax < 50) { groupingMax += 50 } else\n  //       //     if (groupingMax > 50 && groupingMax < 500) { groupingMax += 100 } else\n  //       //       if (groupingMax > 500 && groupingMax < 2000) { groupingMax += 300 } else\n  //       //         if (groupingMax > 2000) { groupingMax += 500 }\n  //       //   let roundedMax = Math.ceil(groupingMax / 7.0) * 7\n  //       //   this.setState({ groupingMax: roundedMax, dateChanged: false })\n  //       // })\n  //     } else {\n  //       // console.log({\n  //       // 'groupingMaxs': groupingMaxs,\n  //       // 'max': max\n  //       // })\n  //       setGroupingMaxs([...groupingMaxs, max])\n  //       // setGroupingMaxs([...groupingMaxs, max], () => {\n  //       let groupingMax = Math.max(...groupingMaxs)\n  //       // if (groupingMax < 50) { groupingMax += 50 } else\n  //       //   if (groupingMax > 50 && groupingMax < 500) { groupingMax += 100 } else\n  //       //     if (groupingMax > 500 && groupingMax < 2000) { groupingMax += 300 } else\n  //       //       if (groupingMax > 2000) { groupingMax += 500 }\n  //       let roundedMax = Math.ceil(groupingMax / 7.0) * 7\n  //       // console.log('roundedMax:', roundedMax)\n  //       setGroupingMax(roundedMax)\n  //       // })\n  //     }\n  //   }\n  // }\n\n  // const dateChangedFunc = () => {\n  //   // setGroupingMaxs([])\n  // }\n\n  // // Set Start/End Dates For Queries\n  // const setStartEndDatesFunc = (startDate, endDate) => {\n  //   // calcGroupingMaxFunc(-1)\n  //   // dateChangedFunc()\n  //   setStartDate(startDate)\n  //   setEndDate(endDate)\n  // }\n\n  // Close Menu (For Click Off Menu)\n  const closeMenuFunc = () => {\n    setShowMenu(false)\n  }\n\n  // // Component Did Mount\n  // useEffect(() => {\n  //   // Initialize Week Picker\n  //   var dates = [];\n  //   for (var i = 0; i < 7; i++) {\n  //     let date = new Date();\n  //     let day = moment(date).day(i)._d\n  //     dates.push(day);\n  //   }\n  //   setWeekDaysInit(dates)\n  //   // Reset Duration On /list\n  //   if (location === '/list') {\n  //     setStartEndDatesFunc(params.startDateMoment, params.endDateMoment)\n  //     setDuration(null)\n  //   }\n  // }, [])\n\n  // const getTypeFromChip = (chip) => {\n  //   switch (chip) {\n\n  //     case 'Alerts':\n  //       return 'ALERT'\n\n  //     case 'Traps':\n  //       return 'TRAP'\n\n  //     case 'Syslogs':\n  //       return 'SYSLOG'\n\n  //     case 'winEvents':\n  //       return 'WINDOWSEVENT'\n\n  //     case 'vmwEvents':\n  //       return 'VMWAREEVENT'\n\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   // Get Formatted Grouping Data\n  //   if (showMenu) {\n  //     let formattedGroupingData = formatGroupingDataForDup(grouping)\n  //     setFormattedGroupingData(formattedGroupingData)\n  //   }\n  //   // Initialize /list State\n  //   if (location === '/list' && title === null) {\n  //     const { title, types, levels, triggers, sources, formattedDateString, duration, startDateMoment, endDateMoment } = params\n  //     return {\n  //       title,\n  //       types,\n  //       levels,\n  //       triggers,\n  //       sources,\n  //       formattedDateString,\n  //       duration,\n  //       startDate: startDateMoment,\n  //       endDate: endDateMoment\n  //       // dateRange,\n  //       // rangeType,\n  //     }\n  //   } else if (grouping !== undefined && location !== '/list') {\n  //     // Initialize Month/Week State\n  //     let today = new Date()\n  //     let month = moment(today).month()\n  //     let week = moment(today).week()\n  //     let year = moment(today).year()\n  //     let monthYearInit = `m${month}y${year}`\n  //     let weekYearInit = `w${week}y${year}`\n  //     // let grouping = grouping\n  //     // let chips = props.grouping.chips // Init Chips (temp fix)\n  //     // let initChips = state.initChips // Init Chips (temp fix)\n  //     if (monthYear != null) { return }\n  //     if (weekYear != null) { return }\n  //     if (grouping.title === 'LOGS & EVENTS' && grouping.subtitle === 'past 30 days') {\n  //       // if (!initChips) {\n  //       //   return { duration: 'm', monthYear, chips, initChips: true } // Init Chips (temp fix)\n  //       // }\n  //       setDuration('m')\n  //       setMonthYear(monthYearInit)\n  //     } else {\n  //       // if (!initChips) {\n  //       // setDuration('w')\n  //       // setWeekYear(weekYearInit)\n  //       // setChips(chips)\n  //       // setInitChips(true) // Init Chips (temp fix)\n  //       // }\n  //       setDuration('w')\n  //       setWeekYear(weekYearInit)\n  //       setMonthYear(monthYearInit) // monthYear temporary, until queries can accept hourDayWeekYear\n  //     }\n  //   }\n  //   // Close Menu If toggleModal: true\n  //   if (toggleModal) {\n  //     closeMenuFunc()\n  //   }\n  // })\n\n  // // On Chart Click\n  // const onChartClickFunc = x => {\n  //   // Push Chip Of Selected Bar/Bar Section\n  //   let selectedChip = x.selectedChip\n  //   let allChips = [...chips]\n  //   let allLevels = levels\n  //   let allTypes = types\n\n  //   if (selectedChip && !chips.includes(selectedChip)) {\n  //     allChips.push(selectedChip)\n  //     if (x.chipType === 'level') {\n  //       allLevels = [...levels, selectedChip.toUpperCase()]\n  //     } else {\n  //       allTypes = [...types, getTypeFromChip(selectedChip)]\n  //     }\n  //   }\n\n  //   history.push(\"/list\", {\n  //     title: grouping.title,\n  //     chips: allChips,\n  //     types: allTypes,\n  //     levels: allLevels,\n  //     triggers: triggers,\n  //     sources: sources,\n  //     formattedDateString: x.formattedDateString,\n  //     startDateMoment: x.startDateMoment,\n  //     endDateMoment: x.endDateMoment,\n  //     duration: null\n  //     // dateRange: x.dateRange,\n  //     // rangeType: x.rangeType\n  //   })\n  // }\n\n\n  // // On Trigger Click\n  // const onTriggerClickFunc = x => {\n  //   history.push(\"/list\", {\n  //     title: x.name, // Coming From EventByTriggerObject\n  //     chips: [...chips, x.name],\n  //     types: types,\n  //     levels: levels,\n  //     triggers: [...triggers, x.name], // Doesn't enter allChips\n  //     sources: sources,\n  //     formattedDateString: null,\n  //     startDateMoment: startDate,\n  //     endDateMoment: endDate,\n  //     duration: duration\n  //     // dateRange: x.dateRange, \n  //     // rangeType: x.rangeType\n  //   })\n  // }\n\n  const setTitleMarginFunc = width => {\n    // console.log(width)\n    setTitleMargin(!titleMargin)\n    setFilterWidth(width)\n  }\n\n  // Set Entity Suggestions On /list\n  const setEntitiySuggestionsFunc = entitySuggestions => {\n    setEntitiySuggestions(entitySuggestions)\n  }\n\n  // Set DurationVal In State For Queries\n  const setDurationValFunc = (weekYear, monthYear, duration) => { // Temporary, until queries can accept hourDayWeekYear\n    if (duration === 'm') {\n      setMonthYear(monthYear)\n    }\n    if (duration === 'w') {\n      setWeekYear(weekYear)\n      setMonthYear(monthYear)\n    }\n  }\n  // const setDurationValFunc = (DV, duration) => {\n  //   if (duration === 'm') {\n  //     setMonthYear(DV)\n  //   }\n  //   if (duration === 'w') {\n  //     setWeekYear(DV)\n  //   }\n  // }\n\n  // Handle Page Click\n  const handlePageClickFunc = data => {\n    let page = data.selected\n    setPage(page)\n  }\n\n  // Handle Grid Edit Click\n  const handleEditClickFunc = () => {\n    setEditing(!editing)\n    // resetChips()\n  }\n\n  // Show Cannot Delete Modal\n  const showCannotDelModalFunc = () => {\n    if (!showCannotDelModal) {\n      setShowCannotDelModal(true)\n    }\n  }\n\n  // Close Cannot Delete Modal\n  const closeCannotDelModalFunc = () => {\n    setShowCannotDelModal(false)\n  }\n\n  // Show Delete Grouping Modal\n  const showDelModalFunc = () => {\n    setShowMenu(false)\n    setShowDelModal(true)\n  }\n\n  // Close Delete Grouping Modal\n  const closeDelModalFunc = () => {\n    setShowDelModal(false)\n  }\n\n  // Show Grouping Deleted Modal\n  const showDeldModalFunc = () => {\n    setShowDeldModal(true)\n  }\n\n  // Close Grouping Deleted Modal\n  const closeDeldModalFunc = () => {\n    setShowDeldModal(false)\n  }\n\n  // Show Duplicate Grouping Modal\n  const showDupModalFunc = () => {\n    setShowMenu(false)\n    setShowDupModal(true)\n  }\n\n  // Close Duplicate Grouping Modal\n  const closeDupModalFunc = () => {\n    setShowDupModal(false)\n  }\n\n  // Toggle Show Menu On Icon Click\n  const toggleShowMenuFunc = () => {\n    setShowMenu(!showMenu)\n  }\n\n  // On Save Edit Click \n  const saveEditFunc = fromGroupingHeader => {\n    let header = fromGroupingHeader.title\n  }\n\n  // // Duplicate Grouping\n  // const duplicateGroupingFunc = () => {\n  //   let formattedGroupingData = formatGroupingDataForDup(grouping)\n  // }\n\n  // On Grouping Update\n  const groupingUpdatedFunc = () => {\n    setEditing(false)\n    setShowMenu(false)\n  }\n\n  // Enable Edit Mode\n  const toggleEditModeFunc = () => {\n    setEditing(!editing)\n  }\n\n  // Set OrderBy For EventList Query\n  const setOrderByFunc = orderBy => {\n    setOrderBy(orderBy)\n  }\n\n  // // Set Filter Chips For Queries\n  // const setChipsFunc = (types, levels, triggers, sources, chips) => {\n  //   setTypes(types)\n  //   setLevels(levels)\n  //   setTriggers(triggers)\n  //   setSources(sources)\n  //   setChips(chips)\n  // }\n\n  // const isLevel = value => {\n  //   return (levelSuggestions.indexOf(value) > -1)\n  // }\n\n  // const isType = value => {\n  //   return (typeSuggestions.indexOf(value) > -1)\n  // }\n\n  // const isSource = value => {\n  //   return (sourceSuggestions.indexOf(value) > -1)\n  // }\n\n  // const updateChipsFunc = chips => {\n  //   let unformattedTypes = []\n  //   let levels = []\n  //   let triggers = []\n  //   // let names = []\n  //   let sources = []\n\n  //   // Restarts Function If Data Is Not Present\n  //   if (empty) { setChips(chips) }\n\n  //   chips.forEach(chip => {\n  //     if (isType(chip)) {\n  //       unformattedTypes.push(chip)\n  //     } else if (isLevel(chip)) {\n  //       levels.push(chip.toUpperCase())\n  //     } else if (isSource(chip)) {\n  //       sources.push(chip.toUpperCase())\n  //     } else {\n  //       triggers.push(chip)\n  //     }\n  //   })\n\n  //   let types = []\n  //   unformattedTypes.forEach(type => {\n  //     type = type.replace(/\\s/g, '')\n  //     type = type.toUpperCase()\n  //     type = type.slice(0, -1);\n  //     types.push(type)\n  //   })\n\n  //   // Check Element Height\n  //   // let height = this.divElement.clientHeight;\n  //   // let width = this.divElement.clientWidth;\n  //   // if (height > this.state.initialHeight && this.state.initialHeight !== null) {\n  //   //   // console.log('onchange')\n\n  //   //   props.setTitleMargin(width)\n  //   // }\n\n  //   // console.log('onChange chips', {\n  //   //   'chips': chips,\n  //   //   'types': types,\n  //   //   'levels': levels,\n  //   //   'triggers': triggers,\n  //   //   'sources': sources\n  //   // })\n  //   // props.setChips(types, levels, triggers, sources, chips)\n  //   setChips(chips)\n  //   setTypes(types)\n  //   setLevels(levels)\n  //   setSources(sources)\n  //   setTriggers(triggers)\n  // }\n\n  // Set Grouping Layout To State On Mount\n  const setGroupingLayoutToState = (x) => {\n    setGroupingLayout(x)\n  }\n\n  // Add Card\n  const addCard = () => {\n    console.log('hit addCard')\n    if (groupingLayout) {\n      // Create ID\n      let randID = Math.random().toString(36).replace('0.', '')\n\n      // Set x Value\n      let groupingWidths = []\n      groupingLayout.forEach((layout) => {\n        if (layout.h === 1) {\n          return\n        } else {\n          let elementWidth = layout.w\n          groupingWidths.push(elementWidth)\n        }\n      })\n\n      // Get Sum of Widths\n      let groupingWidth = groupingWidths.reduce((a, b) => a + b, 0)\n      let xVal = groupingWidth + 1\n\n      // Increment newGridElements\n      setNewGridElements([...newGridElements, randID])\n      setGroupingLayout([...groupingLayout, {\n        w: 2,\n        h: 2,\n        x: xVal,\n        y: 0,\n        i: randID\n      }])\n    } else console.log('error. no grouping layout set')\n  }\n\n  return (\n    <div className='grouping'>\n      {showDelModal &&\n        <Modal\n          showModal={showDelModalFunc}\n          closeModal={closeDelModalFunc}\n          showCannotDelModal={showCannotDelModalFunc}\n          showDeldModal={showDeldModalFunc}\n          groupingID={492049682}\n          modalHeaderText=\"Delete Grouping\"\n          modalBodyText=\"Are you sure?\"\n          loadingText=\"DELETING...\"\n          confirm\n          onConfirm=\"deleteGrouping\"\n          trashIcon\n          cancel\n          wideButtons\n          confirmText=\"CONFIRM\"\n          cancelText=\"CANCEL\"\n        />}\n\n      {showDupModal &&\n        <Modal\n          showModal={showDupModalFunc}\n          closeModal={closeDupModalFunc}\n          modalHeaderText=\"Grouping Duplicated\"\n          modalBodyText=\"Refresh the page to see changes. New groupings will appear at the bottom of the page.\"\n          cancel\n          confirm\n          onConfirm=\"refresh\"\n          confirmText=\"REFRESH\"\n          wideButtons\n          cancelText=\"CLOSE\"\n        />}\n\n      {showDeldModal &&\n        <Modal\n          showDeldModal={showDeldModalFunc}\n          closeModal={closeDeldModalFunc}\n          modalHeaderText=\"Grouping Deleted\"\n          modalBodyText=\"Refresh the page to see changes.\"\n          cancel\n          confirm\n          onConfirm=\"refresh\"\n          confirmText=\"REFRESH\"\n          wideButtons\n          cancelText=\"CLOSE\"\n        />}\n\n      {showCannotDelModal &&\n        <Modal\n          showCannotDelModal={showCannotDelModalFunc}\n          closeModal={closeCannotDelModalFunc}\n          modalHeaderText=\"Error\"\n          modalBodyText=\"Original groupings cannot be deleted.\"\n          confirm\n          confirmText=\"CLOSE\"\n          wideButtons\n        />}\n\n\n      {/* <GroupingHeader\n        // Header Props\n        classname=\"heading\"\n        title={'params ? params.title : grouping.title'}\n        editing={editing}\n\n        // DateRange Props\n        weekDaysInit={weekDaysInit}\n        weekYear={weekYear}\n        // dropdown={this.dropdown}\n        duration={duration}\n        // durationVal={durationVal}\n        setDurationVal={setDurationValFunc}\n        setStartEndDates={setStartEndDatesFunc}\n        startDate={startDate}\n        endDate={endDate}\n        selectedDays={weekDaysInit}\n        location={location}\n        params={params || 'shit'}\n        grouping={grouping || 'shit'}\n        dateChanged={dateChangedFunc}\n\n        // Menu Props\n        chips={chips}\n        editClick={handleEditClickFunc}\n        toggleEditMode={toggleEditModeFunc}\n        saveEdit={saveEditFunc}\n        // toggleModal={this.toggleModal}\n        duplicateGrouping={duplicateGroupingFunc}\n        closeMenu={closeMenuFunc}\n        showMenu={showMenu}\n        toggleShowMenu={toggleShowMenuFunc}\n        formattedGroupingData={formattedGroupingData}\n        showDelModal={showDelModalFunc}\n        showDupModal={showDupModal}\n        showDupModalFunc={showDupModalFunc}\n        closeModal={closeDupModalFunc}\n        groupingID={grouping.id}\n        groupingUpdated={groupingUpdatedFunc}\n      /> */}\n\n\n\n      {/* Lock Grouping Component */}\n      {/* <Lock showLockModal={this.state.showLockModal} onGroupingLock={this.onGroupingLock} onToggleLockModal={this.onToggleLockModal} /> */}\n\n\n      {/* Body */}\n      <div className='grouping-body'>\n        {/* Grouping Editor */}\n        {editing && <Editor addCard={addCard} />}\n        <Grid editing={false} grouping={{ layoutLGs: [] }} setGroupingLayoutToState={setGroupingLayoutToState} layout={groupingLayout}>\n          {newGridElements.length ? <div>{newGridElements.map(el => {\n            console.log('bitch', el)\n            return <Card key={el}>\n              New Grid Element: {el}\n                  </Card>\n          })}</div> : <div>Didn't work</div>}\n\n        </Grid>\n      </div>\n    </div>\n  )\n}\n\nexport default GroupingSandBox","import gql from \"graphql-tag\";\n\nconst GET_GROUPINGS = gql`\nquery {\n  dashboard(where:{\n    name: \"Default\"\n  }) {\n    id\n    name\n    groupings {\n      chips\n      id\n      title\n      subtitle\n      layoutLGs {\n          x\n          y\n          w\n          h\n          card {\n            id\n          }\n        }\n        layoutMDs {\n          x\n          y\n          w\n          h\n          card {\n            id\n          }\n        }\n        layoutSMs {\n          x\n          y\n          w\n          h\n          card {\n            id\n          }\n        }\n        layoutXSs {\n          x\n          y\n          w\n          h\n          card {\n            id\n          }\n        }\n      cards {\n        title\n        cardType\n        id\n        layoutLG {\n          x\n          y\n          w\n          h\n        }\n        layoutMD {\n          x\n          y\n          w\n          h\n        }\n        layoutSM {\n          x\n          y\n          w\n          h\n        }\n        layoutXS {\n          x\n          y\n          w\n          h\n        }\n      }\n    }\n  }\n}\n`;\n\nexport { GET_GROUPINGS as default };","import React, { useState } from 'react'\n\n// Styles Imports\nimport './dashboard.scss'\nimport '../../containers/app.scss'\n\n// Component Imports\nimport Divider from '../../components/Divider/Divider'\nimport Navbar from '../../components/Utility/Navbar/Navbar'\nimport Grouping from '../../components/Grouping/Grouping'\nimport GroupingSandBox from '../../components/GroupingSandBox/GroupingSandBox'\n\n// Query Imports\nimport GET_GROUPINGS from './DashboardQuery'\n\n// Init WidthProvider\nimport '../../../node_modules/react-grid-layout/css/styles.css'\nimport '../../../node_modules/react-resizable/css/styles.css'\n\n// GraphQL\nimport { Query } from 'react-apollo'\n\nconst Dashboard = props => {\n    const { history, location, store } = props\n\n    // state\n    const [alertData, setAlertData] = useState([40, 41, 48, 35, 51, 36, 19])\n    const [syslogsData, setSyslogsData] = useState([25, 14, 17, 17, 21, 15, 13])\n    const [trapsData, setTrapsData] = useState([15, 15, 18, 16, 16, 18, 14])\n    const [alertHealth, setAlertHealth] = useState('#D34747')\n    const [trapHealth, setTrapHealth] = useState('#FAF342')\n    const [syslogHealth, setSyslogHealth] = useState('#FAF342')\n    const [health, setHealth] = useState('fair')\n    const [events, setEvents] = useState([])\n    const [count, setCount] = useState(11)\n\n\n    const updateEvents = () => {\n        setEvents(store.monthByTriggerObject.slice(0, this.state.count))\n    }\n\n    return (\n        <div>\n            <Query query={GET_GROUPINGS}>\n                {({ data, loading, error }) => {\n                    if (error) return `Error! ${error.message}`;\n                    return (\n                        <div>\n                            <Navbar loading={loading ? true : false} />\n                            {loading ? <div /> : <div>\n                                {data.dashboard.groupings.map(grouping => (\n                                    <div key={grouping.id}>\n                                        <Grouping grouping={grouping}\n                                            // {...props}\n                                            count={count}\n                                            updateEvents={updateEvents}\n                                            events={events}\n                                            alertData={alertData}\n                                            trapsData={trapsData}\n                                            syslogsData={syslogsData}\n                                            history={history}\n                                            location={location} />\n                                        <Divider />\n                                    </div>\n                                ))}\n                            </div>}\n                        </div>\n                    )\n                }}\n            </Query>\n            <GroupingSandBox />\n        </div>\n    )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport { Consumer } from '../../data/AppContext'\n\n// Styles Imports\nimport './dashboard-page.scss'\n\n// Component Imports\nimport Dashboard from '../../components/Dashboard/Dashboard'\n\nconst DashboardPage = props => {\n    const { history, location } = props\n    return (\n        <Consumer>\n            {(context) => (\n                <Dashboard store={context.store} actions={context.actions} history={history} {...location.state} location={location.pathname} />\n            )}\n        </Consumer>\n    )\n}\n\nexport default DashboardPage","import React, { useState } from 'react'\nimport './login.scss'\n\n// Component Imports\nimport Button from '../Utility/Button/Button'\n\n// Icon Imports (Logo)\nimport neutral from '../../assets/images/neutral.png'\n\nconst Login = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleChangeUsername = event => {\n        setUsername(event.target.value)\n    }\n\n    const handleChangePassword = event => {\n        setPassword(event.target.value)\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        console.log('submitted')\n    }\n\n    return (\n        <div className=\"h-container\" style={{ height: '100vh' }}>\n            <div className=\"login\">\n                <img src={neutral} alt=\"neutral\" className=\"logo\" />\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\" value={username} onChange={handleChangeUsername} />\n                    <input type=\"text\" name=\"password\" placeholder=\"Password\" value={password} onChange={handleChangePassword} />\n                    <Button buttonType=\"submit\"><input type=\"submit\" value=\"Login\" /></Button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport { Consumer } from '../../data/AppContext'\n\n// Styles\nimport './login-page.scss'\n\n// Components\nimport Login from '../../components/Login/Login'\n\nconst LoginPage = () => {\n  return (\n    <Consumer>\n      {(context) => (\n        <Login />\n      )}\n    </Consumer>\n  )\n}\n\nexport default LoginPage","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\n// GraphQL Imports\nimport { ApolloProvider } from 'react-apollo'\nimport ApolloClient from 'apollo-boost'\n\n// React Context\nimport { Provider } from './data/AppContext.js'\n\n// Component Imports\nimport ListPage from './containers/ListPage/ListPage'\nimport DashboardPage from './containers/DashboardPage/DashboardPage'\nimport LoginPage from './containers/LoginPage/LoginPage'\n\n// Styles\nimport './index.scss'\n\n\n// GraphQL Setup\nconst client = new ApolloClient({ \n  uri: 'https://192.168.21.110:3000/',\n  // uri: 'http://demo.harmony.tech:3000/',\n  // uri: 'http://localhost:3000/',\n})\n\n// fetchOptions: {\n//   mode: 'no-cors',\n// }, \n// const client = new ApolloClient({ uri: 'https://us1.prisma.sh/public-petalvulture-610/harmony/dev' })\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider>\n      <Router>\n        <Route path='/login' component={LoginPage} />\n        <Route exact path='/' component={DashboardPage} />\n        <Route path='/list' component={ListPage} />\n      </Router>\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}